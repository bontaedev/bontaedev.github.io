{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/JS/010-js-0224/",
    "result": {"data":{"cur":{"id":"d97eff24-e3cb-534d-9380-39e0dc146fbb","html":"<blockquote>\n<p>자바스크립트 deep dive</p>\n</blockquote>\n<h2 id=\"이벤트\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8\" aria-label=\"이벤트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이벤트</h2>\n<ul>\n<li>이벤트 핸들러 : 이벤트가 발생되었을 때 브라우저에 호출을 위임한 함수</li>\n</ul>\n<h2 id=\"이벤트-핸들러-등록\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%ED%95%B8%EB%93%A4%EB%9F%AC-%EB%93%B1%EB%A1%9D\" aria-label=\"이벤트 핸들러 등록 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이벤트 핸들러 등록</h2>\n<ul>\n<li>브라우저는 이벤트 핸들러를 통해 지정한 함수를 호출</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 1. attribute 방식</span>\n<span class=\"token comment\">//</span>\n<span class=\"token operator\">&lt;</span>button onclick<span class=\"token operator\">=</span><span class=\"token string\">'add(a,b)'</span><span class=\"token operator\">></span>Click <span class=\"token keyword\">this</span> button<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span>b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">+</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token comment\">// 2. 이벤트 핸들러 프로퍼티 방식</span>\n<span class=\"token comment\">//</span>\n</code></pre></div>","excerpt":"자바스크립트 deep dive 이벤트 이벤트 핸들러 : 이벤트가 발생되었을 때 브라우저에 호출을 위임한 함수 이벤트 핸들러 등록 브라우저는 이벤트 핸들러를 통해 지정한 함수를 호출","frontmatter":{"date":"March 28, 2022","title":"자바스크립트 - 이벤트","categories":"JS","author":"bontaedev","emoji":"🪤"},"fields":{"slug":"/JS/010-js-0224/"}},"next":{"id":"3e05843f-4051-5ee8-a1cd-663d19e814b4","html":"<blockquote>\n<p>‘모던 자바스크립트 Deep Dive’를 읽고 중요한 내용만 정리</p>\n</blockquote>\n<h2 id=\"타입변환\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85%EB%B3%80%ED%99%98\" aria-label=\"타입변환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입변환</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> str<span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// string 10</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> x<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// number 10</span>\n\n<span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>type <span class=\"token keyword\">of</span> str<span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">)</span> <span class=\"token comment\">// string 10</span></code></pre></div>\n<ul>\n<li>\n<p>명시적 타입변환 : 값의 타입을 개발자가 의도적으로 변환하는 것을 명시적 타입변환 (Type casting)이라고 한다.</p>\n</li>\n<li>\n<p>암묵적 타입변환 : 개발자의 의도와는 관계 없이 표현식을 평가하는 도중에 JS엔진에 의해 암묵적으로 타입이 변환(Type coercion)</p>\n</li>\n<li>\n<p>원시값은 변경불가능한 값이기 때문에 기존 원시값을 이용해 새로운 값을 생성하는 과정. 표현식을 제대로 평가하기 위해 변환된 값을 사용하고 버린다.</p>\n</li>\n</ul>\n<h2 id=\"단축평가\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%B6%95%ED%8F%89%EA%B0%80\" aria-label=\"단축평가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단축평가</h2>\n<ul>\n<li>논리연산자를 사용한 단축평가</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">'Cat'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'Dog'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Dog</span>\n<span class=\"token string\">'Cat'</span> <span class=\"token operator\">||</span> <span class=\"token string\">'Dog'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Cat</span></code></pre></div>\n<p>논리곱 연산자의 경우 양쪽 변이 모두 true라고 판정되어야 true가 반환된다. 따라서 이 경우에는 좌항에서 우항으로 평가가 이루어지는데 즉, 두번째 피연산자가 이 식의 결과를 반영한다는 의미로 볼 수 있다. 따라서 이 식은 두번째 피연산자를 반환한다.\n논리합 연산자는 두개 중 하나만 true로 평가되어도 true를 반환한다. 이때 좌항과 우항중에 좌항에 있는 요소만 true로 판정나도 되기 때문에 왼쪽 요소만 true임을 평가하면 된다. 즉 이 경우에는 Cat을 반환한다.</p>\n<ul>\n<li>이렇게 논리연산의 결과를 결정하는 피연산자를 타입변환하지 않고 그대로 반환하는 것을 단축평가(short circuit evaluation)이라고 한다.</li>\n<li>단축평가를 이용해 간단한 조건문을 대체할 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> done <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> msg <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>done<span class=\"token punctuation\">)</span> message <span class=\"token operator\">=</span> <span class=\"token string\">'완료'</span><span class=\"token punctuation\">;</span>\n\nmessage <span class=\"token operator\">=</span> done <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'완료'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 완료</span>\n<span class=\"token comment\">// done이 true면 message에 '완료'를 반환해 대입</span>\n\n<span class=\"token keyword\">var</span> done <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> msg <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>done<span class=\"token punctuation\">)</span> message <span class=\"token operator\">=</span> <span class=\"token string\">'미완료'</span><span class=\"token punctuation\">;</span>\n\nmessage <span class=\"token operator\">=</span> done <span class=\"token operator\">||</span> <span class=\"token string\">'미완료'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 미완료</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> elem <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> value <span class=\"token operator\">=</span> elem <span class=\"token operator\">&amp;&amp;</span> elem<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>함수 매개변수에 기본값 전달\n함수를 호출할 때 인자를 전달하지 않으면 매개변수에 undefined가 할당된다. 단축평가를 이용하면 undefined로 일어나는 에러를 방지할 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">getStringLength</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">str</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  str <span class=\"token operator\">=</span> str <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> str<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">getStringLength</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span>\n<span class=\"token function\">getStringLength</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\n\n<span class=\"token comment\">// ES6 - 매개변수 기본값 설정</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">getStringLength</span><span class=\"token punctuation\">(</span>str <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> str<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>옵셔널 체이닝(Optional Chaining)</li>\n<li>ECMAScript2020에 도입된 개념으로 연산자?.는 좌항의 피연산자가 null, undefined이면 undefinedfmf 반환하고, 그렇지 않으면 우항으로 참조를 계속한다.</li>\n<li>이 기능은 객체를 참조하려는 변수가 null, undefined 인지 확인하고 참조할 때 유용하게 사용한다.</li>\n<li>단축평가와 다른점 : 좌항 피연산자가 Falsy값이여도 null,undefined가 아니라면 우항으로 계속 이어나감</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> elem <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> value <span class=\"token operator\">=</span> elem<span class=\"token operator\">?.</span>value<span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span></code></pre></div>\n<ul>\n<li>null 병합 연산자 (WIP)</li>\n</ul>","frontmatter":{"date":"March 28, 2022","title":"자바스크립트 - 타입변환과 단축평가","categories":"JS","author":"bontaedev","emoji":"🪤"},"fields":{"slug":"/JS/02-js-0302/"}},"prev":{"id":"fae96840-466e-5a7b-86c0-b5ff95dd5230","html":"<blockquote>\n<h1 id=\"오라클-데이터베이스를-학습하고-정리한-포스트입니다\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%9D%BC%ED%81%B4-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EB%A5%BC-%ED%95%99%EC%8A%B5%ED%95%98%EA%B3%A0-%EC%A0%95%EB%A6%AC%ED%95%9C-%ED%8F%AC%EC%8A%A4%ED%8A%B8%EC%9E%85%EB%8B%88%EB%8B%A4\" aria-label=\"오라클 데이터베이스를 학습하고 정리한 포스트입니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오라클 데이터베이스를 학습하고 정리한 포스트입니다..</h1>\n</blockquote>\n<h1 id=\"실행환경-설정\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%ED%96%89%ED%99%98%EA%B2%BD-%EC%84%A4%EC%A0%95\" aria-label=\"실행환경 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실행환경 설정</h1>\n<ul>\n<li>oracle 데이터베이스 사용</li>\n<li>DBeaver 사용</li>\n</ul>\n<h1 id=\"데이터베이스란\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EB%9E%80\" aria-label=\"데이터베이스란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터베이스란?</h1>\n<ul>\n<li>\n<p>데이터 : 어떤 자료나 실제 값</p>\n</li>\n<li>\n<p>데이터베이스 : 데이터가 저장되는 공간. 연관된 데이터를 최대한 중복없이 구조적으로 저장해 놓은 곳</p>\n<ul>\n<li>실시간 접근성 : 사용자가 데이터를 요청하면 실시간으로 서비스</li>\n<li>계속적인 변화 : 최신 데이터를 유지</li>\n<li>동시 공유 : 서로 다른 업무를 하는 사용자들이 동시에 접속해서 데이터를 공유하는게 가능.</li>\n<li>내용에 따른 참조 : 데이터의 물리적 주소값이 아니라 데이터가 가지고 있는 값에 따라 참조된다.</li>\n</ul>\n</li>\n<li>\n<p>데이터베이스의 장점</p>\n<ul>\n<li>테이블 단위로 저장된다.</li>\n<li>테이블을 구성하는 데이터의 조건, 자료형 설정</li>\n<li>사용자가 규정한 형태의 데이터만 저장되어 관리될 수 있음</li>\n</ul>\n<h1 id=\"dbmsdatabase-management-system\" style=\"position:relative;\"><a href=\"#dbmsdatabase-management-system\" aria-label=\"dbmsdatabase management system permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DBMS(Database Management System)</h1>\n<p>데이터베이스에서 데이터를 추출, 조작, 정의, 제어등을 할 수 있게 해주는 데이터베이스 관리 시스템</p>\n</li>\n</ul>","frontmatter":{"date":"March 29, 2022","title":"데이터베이스 1일차 정리 01","categories":"database","author":"bontaedev","emoji":"🪤"},"fields":{"slug":"/database/01-db0101/"}},"site":{"siteMetadata":{"siteUrl":"https://bontaedev.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/JS/010-js-0224/","nextSlug":"/JS/02-js-0302/","prevSlug":"/database/01-db0101/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}