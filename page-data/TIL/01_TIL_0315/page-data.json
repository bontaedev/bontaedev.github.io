{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/TIL/01_TIL_0315/",
    "result": {"data":{"cur":{"id":"fb7e0336-113a-504d-bdb2-7dd9ca167efc","html":"<p>dssss</p>","excerpt":"dssss","frontmatter":{"date":"March 15, 2022","title":"TIL_220315","categories":"TIL","author":"bontaedev","emoji":"🪤"},"fields":{"slug":"/TIL/01_TIL_0315/"}},"next":{"id":"9c09ee1f-6019-5b60-bd58-c52dd00d404f","html":"<blockquote>\n<h2 id=\"자바-객체지향-프로그래밍과-관련된-부분을-학습하고-정리한-포스트입니다\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94-%EA%B0%9D%EC%B2%B4%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EA%B3%BC-%EA%B4%80%EB%A0%A8%EB%90%9C-%EB%B6%80%EB%B6%84%EC%9D%84-%ED%95%99%EC%8A%B5%ED%95%98%EA%B3%A0-%EC%A0%95%EB%A6%AC%ED%95%9C-%ED%8F%AC%EC%8A%A4%ED%8A%B8%EC%9E%85%EB%8B%88%EB%8B%A4\" aria-label=\"자바 객체지향 프로그래밍과 관련된 부분을 학습하고 정리한 포스트입니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바 객체지향 프로그래밍과 관련된 부분을 학습하고 정리한 포스트입니다.</h2>\n</blockquote>\n<h1 id=\"객체지향-언어의-특징\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4%EC%A7%80%ED%96%A5-%EC%96%B8%EC%96%B4%EC%9D%98-%ED%8A%B9%EC%A7%95\" aria-label=\"객체지향 언어의 특징 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체지향 언어의 특징</h1>\n<ul>\n<li>코드의 재사용성이 높다 - 기존의 코드를 재활용 (상속)</li>\n<li>코드의 관리가 용이하다 - 포함관계, 오버라이딩</li>\n<li>신뢰성 높은 프로그래밍이 가능하다. - 제어자, 메서드 활용하여 코드의 중복을 제거</li>\n</ul>\n<h1 id=\"객체의-구성요소\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4%EC%9D%98-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C\" aria-label=\"객체의 구성요소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체의 구성요소</h1>\n<ul>\n<li>속성(property) : 멤버변수, 특성, 필드, 상태</li>\n<li>기능(function) : 메서드, 함수, 행위</li>\n</ul>\n<h1 id=\"클래스와-인스턴스\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4%EC%99%80-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4\" aria-label=\"클래스와 인스턴스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스와 인스턴스</h1>\n<ul>\n<li>클래스 : 객체를 정의 해놓은 설계도. 객체를 생성하기 위해 사용된다.</li>\n<li>클래스를 만든다 -> 자료형을 만든다.</li>\n<li>인스턴스(객체) : 어떤 클래스로부터 만들어진 객체를 인스턴스라고 한다.</li>\n<li>인스턴스 : new 연산자를 통해 heap영역 안에 저장할 수 있는 공간.</li>\n<li>laptop.brand = “LG”; // .을 찍어서 주소값으로 따라가 heap영역으로 간다.</li>\n</ul>\n<h1 id=\"추상화와-캡슐화\" style=\"position:relative;\"><a href=\"#%EC%B6%94%EC%83%81%ED%99%94%EC%99%80-%EC%BA%A1%EC%8A%90%ED%99%94\" aria-label=\"추상화와 캡슐화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>추상화와 캡슐화</h1>\n<ul>\n<li>추상화 :</li>\n</ul>\n<h1 id=\"캡슐화를-구현하는-방법\" style=\"position:relative;\"><a href=\"#%EC%BA%A1%EC%8A%90%ED%99%94%EB%A5%BC-%EA%B5%AC%ED%98%84%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"캡슐화를 구현하는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>캡슐화를 구현하는 방법</h1>\n<blockquote>\n<p>사용자가 접근하면 안되는 데이터들을 내부적으로 숨기거나 접근을 제한.</p>\n</blockquote>\n<ol>\n<li>접근제한자 사용.</li>\n<li>getter/setter 사용</li>\n</ol>\n<h1 id=\"접근제한자access-modifier\" style=\"position:relative;\"><a href=\"#%EC%A0%91%EA%B7%BC%EC%A0%9C%ED%95%9C%EC%9E%90access-modifier\" aria-label=\"접근제한자access modifier permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>접근제한자(Access Modifier)</h1>\n<ul>\n<li>public : 외부, 모든 곳에서 접근 가능</li>\n<li>private : 반드시 해당 클래스 내부에서만 접근이 가능 (일반적)</li>\n<li>protected : 같은 패키지 혹은 자식 패키지 에서만 접근가능</li>\n<li>default : 같은 패키지 안에서는 접근 가능</li>\n</ul>\n<h1 id=\"getter--setter\" style=\"position:relative;\"><a href=\"#getter--setter\" aria-label=\"getter  setter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>getter / setter</h1>\n<ul>\n<li>값을 얻어오거나 셋팅할 수 있는 함수</li>\n<li>읽기 전용, 쓰기 전용</li>\n<li>getter/setter는 반드시 public으로 선언</li>\n<li>이를 통해 들어오는 데이터와 나가는 데이터에 전처리 후처리를 해줄 수 있다.</li>\n</ul>\n<h1 id=\"생성자\" style=\"position:relative;\"><a href=\"#%EC%83%9D%EC%84%B1%EC%9E%90\" aria-label=\"생성자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>생성자</h1>\n<ul>\n<li>리턴타입 없음</li>\n<li>클래스명과 이름이 같음</li>\n<li>인스턴스가 만들어질 때 생성자가 필드 공간들을 초기화 (기본값을 셋팅)</li>\n<li>자바에서는 기본생성자를 명시하지 않아도 JVM이 추가해준다</li>\n<li>대신 생성자를 오버로딩 해서 사용할 때는 기본 생성자를 따로 명시해줘야 한다. JVM이 따로 추가하지 않기 때문</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> brand<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> speed<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> oil<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>brand <span class=\"token operator\">=</span> brand<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>speed <span class=\"token operator\">=</span> speed<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>oil <span class=\"token operator\">=</span> oil<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"this\" style=\"position:relative;\"><a href=\"#this\" aria-label=\"this permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>this.</h1>\n<ul>\n<li></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setBrand</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> brand<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>brand <span class=\"token operator\">=</span> brand<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">// 인스턴스안의 brand와 매개변수로 전해진 brand</span>\n\t\t<span class=\"token comment\">// this는 주소값. 즉 자기자신이라고 생각하자.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"클래스변수\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4%EB%B3%80%EC%88%98\" aria-label=\"클래스변수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스변수</h1>\n<ul>\n<li>클래스 변수, 프로그램의 시작과 동시에 메모리에 올라간다.</li>\n<li>남발하면 메모리 영역 관리가 어려워질 수 있다. 신중하게 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Access01</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> id<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">protected</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> nickname<span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">String</span> written_date<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> view_count<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"date":"March 11, 2022","title":"자바 객체지향 프로그래밍 정리 01","categories":"java","author":"bontaedev","emoji":"🪤"},"fields":{"slug":"/java/01-academy-oop01/"}},"prev":{"id":"d3adce31-eccd-548d-b659-64ec2eb8c6ba","html":"<blockquote>\n<h2 id=\"자바-객체지향-프로그래밍과-관련된-부분을-학습하고-정리한-포스트입니다\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94-%EA%B0%9D%EC%B2%B4%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EA%B3%BC-%EA%B4%80%EB%A0%A8%EB%90%9C-%EB%B6%80%EB%B6%84%EC%9D%84-%ED%95%99%EC%8A%B5%ED%95%98%EA%B3%A0-%EC%A0%95%EB%A6%AC%ED%95%9C-%ED%8F%AC%EC%8A%A4%ED%8A%B8%EC%9E%85%EB%8B%88%EB%8B%A4\" aria-label=\"자바 객체지향 프로그래밍과 관련된 부분을 학습하고 정리한 포스트입니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바 객체지향 프로그래밍과 관련된 부분을 학습하고 정리한 포스트입니다.</h2>\n</blockquote>\n<h1 id=\"오버라이딩overriding\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%B2%84%EB%9D%BC%EC%9D%B4%EB%94%A9overriding\" aria-label=\"오버라이딩overriding permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오버라이딩(overriding)</h1>\n<ul>\n<li>\n<p>조상 클래스로부터 상속받은 메서드의 내용을 변경하는 것</p>\n</li>\n<li>\n<p>조건 : 이름 / 매개변수 / 반환타입 이 같아야 한다. (선언부)</p>\n</li>\n<li>\n<p>접근제어자와 예외는 제한된 조건에서 변경가능</p>\n<ul>\n<li>조상클래스보다 넓거나 같게는 변경가능 (ex. protected -> public / protected )</li>\n<li>조상클래스보다 많은 예외를 등록할 수 없다.</li>\n<li>인스턴스 메서드를 static 메서드 또는 반대로 변경할 수 없음</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Class</span> <span class=\"token class-name\">Parent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">parentMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">SQLException</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">Class</span> <span class=\"token class-name\">Child</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Parent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">parentMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 자식 클래스에서 더 많은 예외를 던질 수 없다. (x)</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"오버로딩-vs-오버라이딩\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%B2%84%EB%A1%9C%EB%94%A9-vs-%EC%98%A4%EB%B2%84%EB%9D%BC%EC%9D%B4%EB%94%A9\" aria-label=\"오버로딩 vs 오버라이딩 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오버로딩 vs 오버라이딩</h2>\n<ul>\n<li>overloading : 기존에 없는 새로운 메서드를 정의</li>\n<li>overriding : 상속받은 메서드의 내용을 변경</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Parent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">parentMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Child</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Parent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">parentMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// overriding</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">parentMethod</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// overloading</span>\n\n  <span class=\"token keyword\">void</span> <span class=\"token function\">childMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">childMethod</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// overloading</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">childMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// error!</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"super\" style=\"position:relative;\"><a href=\"#super\" aria-label=\"super permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>super</h2>\n<ul>\n<li>자손 클래스에서 조상클래스의 상속받은 멤버를 참조하기 위해 사용하는 변수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span>\n</code></pre></div>\n<h2 id=\"super---조상클래스의-생성자\" style=\"position:relative;\"><a href=\"#super---%EC%A1%B0%EC%83%81%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EC%83%9D%EC%84%B1%EC%9E%90\" aria-label=\"super   조상클래스의 생성자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>super() - 조상클래스의 생성자</h2>\n<ul>\n<li>조상클래스의 생성자를 자식클래스에서 호출할 때 사용</li>\n<li>조상클래스의 생성자를 호출하면 자손클래스의 인스턴스에서 조상클래스의 멤버를 사용할 수 있다.\n<ul>\n<li>자손의 멤버 + 조상의 멤버 -> 하나의 인스턴스</li>\n</ul>\n</li>\n<li>Object 클래스를 상속받는 모든 클래스의 생성자의 첫 줄에는 생성자.this() 이나 super()를 호출해야 한다. 안하면 컴파일러가 자동으로 추가한다.</li>\n</ul>\n<h2 id=\"제어자-modifier\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%EC%96%B4%EC%9E%90-modifier\" aria-label=\"제어자 modifier permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제어자 (modifier)</h2>\n<ul>\n<li>클래스, 변수, 메서드의 선언부에 사용되어 부가적인 의미를 부여</li>\n<li>접근제어자 : public, protected, default, private</li>\n</ul>\n<ol>\n<li>static (공통적인)</li>\n</ol>\n<ul>\n<li>공통적으로 사용되는 영역인 static에 생성될 수 있게 지정해줌</li>\n<li>static 멤버변수 : 클래스변수로 지정됨. 클래스가 메모리에 로드되면 생성된다. 즉 인스턴스 없이 사용가능.</li>\n<li>static 메서드 : 인스턴스 생성없이 호출가능하다. 인스턴스 멤버들을 사용할 수는 없다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">StaticTest</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> width <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 클래식 멤버변수</span>\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> height <span class=\"token operator\">=</span> <span class=\"token number\">120</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">static</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 클래스 초기화 블럭</span>\n    <span class=\"token comment\">// static변수위 복잡한 초기화 진행</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// static 메서드</span>\n    retu\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"2\">\n<li>final (마지막의)</li>\n</ol>\n<ul>\n<li>상수를 사용하거나 메서드에 쓰면 오버라이딩을 못하게 하고, 클래스에 사용하면 상속을 제한한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FinalTest</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 상속 안됨</span>\n  <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> MAX_SIZE <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 상수</span>\n  <span class=\"token keyword\">final</span> <span class=\"token keyword\">void</span> <span class=\"token function\">getMaxSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> LV <span class=\"token operator\">=</span> MAX_SIZE<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> MAX_SIZE<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 생성자를 이용해 final멤버 변수를 초기화</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Card</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> NUMBER<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n  <span class=\"token class-name\">Card</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Strign</span> kind<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 생성자로 final 변수 초기화</span>\n  KIND <span class=\"token operator\">=</span> kind<span class=\"token punctuation\">;</span>\n  NUMBER <span class=\"token operator\">=</span> num<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\nc<span class=\"token punctuation\">.</span>NUMBER <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 물론 접근해서 새로운 값을 할당할 수는 없다!</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ol start=\"3\">\n<li>abstract (추상)</li>\n</ol>\n<ul>\n<li>메서드의 선언부만 작성하고 실제 수행내용은 수행하지 않음</li>\n<li>추상클래스, 추상메서드를 작성할 때 사용</li>\n</ul>\n<ol start=\"4\">\n<li>접근제어자</li>\n</ol>","frontmatter":{"date":"March 15, 2022","title":"자바 객체지향 프로그래밍 정리 - 오버로딩","categories":"java","author":"bontaedev","emoji":"🪤"},"fields":{"slug":"/java/03-academy-oop03/"}},"site":{"siteMetadata":{"siteUrl":"https://bontaedev.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/TIL/01_TIL_0315/","nextSlug":"/java/01-academy-oop01/","prevSlug":"/java/03-academy-oop03/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}