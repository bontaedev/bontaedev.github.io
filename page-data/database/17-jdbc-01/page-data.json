{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/database/17-jdbc-01/",
    "result": {"data":{"cur":{"id":"bae6fe8f-6518-5c89-8cf7-9bf685ae0899","html":"<h2 id=\"jdbc\" style=\"position:relative;\"><a href=\"#jdbc\" aria-label=\"jdbc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JDBC</h2>\n<ul>\n<li><code class=\"language-text\">JDBC (Java Database Connectivity)</code> : 자바에서 데이터베이스와 연결해 데이터를 주고받을 수 있게 해주는 라이브러리</li>\n<li>sql 명령문을 자바에서 수행하면 DB로 전달</li>\n<li>DBMS의 종류에 따라서 JDBC의 종류도 달라진다.</li>\n<li>여기서는 Oracle (OJDBC) 를 사용</li>\n</ul>\n<h2 id=\"jdbc-드라이버-다운로드와-세팅\" style=\"position:relative;\"><a href=\"#jdbc-%EB%93%9C%EB%9D%BC%EC%9D%B4%EB%B2%84-%EB%8B%A4%EC%9A%B4%EB%A1%9C%EB%93%9C%EC%99%80-%EC%84%B8%ED%8C%85\" aria-label=\"jdbc 드라이버 다운로드와 세팅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JDBC 드라이버 다운로드와 세팅</h2>\n<h2 id=\"jdbc로-자바프로그램과-db-연동하기\" style=\"position:relative;\"><a href=\"#jdbc%EB%A1%9C-%EC%9E%90%EB%B0%94%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B3%BC-db-%EC%97%B0%EB%8F%99%ED%95%98%EA%B8%B0\" aria-label=\"jdbc로 자바프로그램과 db 연동하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JDBC로 자바프로그램과 DB 연동하기</h2>\n<p>기본적인 DB연결 셋팅</p>\n<ul>\n<li>Connnection 객체 생성</li>\n<li>DriverManager 클래스의 getConnection()을 통해 객체 생성</li>\n<li>getConnection(url, username, password)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Connection</span> con <span class=\"token operator\">=</span> <span class=\"token class-name\">DriverManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span>\n\t\t\t<span class=\"token string\">\"jdbc:oracle:thin:@localhost:1521:xe\"</span>\n\t\t\t<span class=\"token punctuation\">,</span> <span class=\"token string\">\"id\"</span> <span class=\"token comment\">// id</span>\n\t\t\t<span class=\"token punctuation\">,</span> <span class=\"token string\">\"pw\"</span> <span class=\"token comment\">// pw</span>\n\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DB connection success!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"기본적인-crud-기능-구현해보기\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-crud-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84%ED%95%B4%EB%B3%B4%EA%B8%B0\" aria-label=\"기본적인 crud 기능 구현해보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본적인 CRUD 기능 구현해보기</h2>\n<ul>\n<li><code class=\"language-text\">Statement</code> 객체 : 오라클에게 sql문을 전송해 쿼리의 결과를 요청할 수 있게 해주는 객체</li>\n<li><code class=\"language-text\">executeUpdate()</code> : 행에 변화를 줄 때 사용하는 메서드. 쿼리문의 INSERT, UPDATE, DELETE와 사용\n<ul>\n<li>메서드의 반환값으로 나오는 정수는 인자값으로 넘겨준 쿼리문을 통해서 영향을 받은 행의 개수</li>\n</ul>\n</li>\n</ul>\n<br>\n<ul>\n<li>INSERT 기능 (데이터 삽입)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">String</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"jdbc:oracle:thin:@localhost:1521:xe\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">String</span> username <span class=\"token operator\">=</span> <span class=\"token string\">\"username\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">String</span> password <span class=\"token operator\">=</span> <span class=\"token string\">\"password\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Connection</span> con <span class=\"token operator\">=</span> <span class=\"token class-name\">DriverManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token class-name\">Statement</span> st <span class=\"token operator\">=</span> con<span class=\"token punctuation\">.</span><span class=\"token function\">createStatement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DB접속 성공\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token class-name\">String</span> sql <span class=\"token operator\">=</span> <span class=\"token string\">\"insert into cafe values(seq_cafe.nextval, '아이스아메리카노',2400, sysdate)\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> rs <span class=\"token operator\">=</span> st<span class=\"token punctuation\">.</span><span class=\"token function\">executeUpdate</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rs <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"데이터추가성공\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">else</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"데이터추가실패\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<br>\n<ul>\n<li>UPDATE 기능 (데이터 수정)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Connection</span> con <span class=\"token operator\">=</span> <span class=\"token class-name\">DriverManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token class-name\">Statement</span> st <span class=\"token operator\">=</span> con<span class=\"token punctuation\">.</span><span class=\"token function\">createStatement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"db conn success\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token class-name\">String</span> sql <span class=\"token operator\">=</span> <span class=\"token string\">\"update cafe set product_name = '바닐라라떼', price = 4500 where product_id = 1\"</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">int</span> rs <span class=\"token operator\">=</span> st<span class=\"token punctuation\">.</span><span class=\"token function\">executeUpdate</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rs <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"성공\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">else</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"실패\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<ul>\n<li>DELETE 기능 (데이터 삭제)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Connection</span> con <span class=\"token operator\">=</span> <span class=\"token class-name\">DriverManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token class-name\">Statement</span> st <span class=\"token operator\">=</span> con<span class=\"token punctuation\">.</span><span class=\"token function\">createStatement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"conn success!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token comment\">// product_id 가 2인 데이터 삭제</span>\n\t\t\t<span class=\"token class-name\">String</span> sql <span class=\"token operator\">=</span> <span class=\"token string\">\"delete from cafe where product_id = 2\"</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">int</span> rs <span class=\"token operator\">=</span> st<span class=\"token punctuation\">.</span><span class=\"token function\">executeUpdate</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rs <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"데이터 삭제 성공\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">else</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"삭제 실패\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<ul>\n<li>SELECT 기능 (데이터 조회)\n<ul>\n<li><code class=\"language-text\">executeQuery()</code> : 쿼리문을 실행시키고 반환값을 ResultSet(질의결과)을 객체로 반환받는다.</li>\n<li><code class=\"language-text\">ResultSet</code> : ResultSet이 반환될 때 커서가 있는데, 초기에는 반환받은 값의 첫번째 행 위쪽을 가리킨다. 따라서 커서를 내려서 첫번째 행을 가리키도록 해야한다.</li>\n<li><code class=\"language-text\">rs.next()</code> : rs.next()가 반환하는 값은 만약 커서를 아래행으로 내렸을 때 다음 행이 존재하는지 bool값으로 반환 (true/false)</li>\n<li>ResultSet에서 값을 얻어내는 방법 : getXXX..() - 오라클의 인덱스나 컬럼명을 사용해 조회</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Connection</span> con <span class=\"token operator\">=</span> <span class=\"token class-name\">DriverManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token class-name\">Statement</span> st <span class=\"token operator\">=</span> con<span class=\"token punctuation\">.</span><span class=\"token function\">createStatement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DB 접속 성공\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token class-name\">String</span> sql <span class=\"token operator\">=</span> <span class=\"token string\">\"select * from cafe where product_id = 1\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token class-name\">ResultSet</span> rs <span class=\"token operator\">=</span> st<span class=\"token punctuation\">.</span><span class=\"token function\">executeQuery</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rs : \"</span> <span class=\"token operator\">+</span> rs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 객체의 주소값</span>\n\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rs.next() : \"</span> <span class=\"token operator\">+</span> rs<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token comment\">// 커서가 데이터를 가리키고 있는 상태에서 값을 얻어내는 방법</span>\n\t\t\t<span class=\"token comment\">// 1. 오라클의 인덱스를 사용하는 방법</span>\n      <span class=\"token punctuation\">(</span><span class=\"token function\">product_id</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token function\">product_name</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token function\">price</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token function\">reg_date</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span><span class=\"token function\">getInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span><span class=\"token function\">getInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token comment\">// 만약 커서를 내렸을때 행이 존재한다면 값을 출력하겠다.</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span><span class=\"token function\">getInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>\n\t\t\t\t\t\t<span class=\"token string\">\" : \"</span> <span class=\"token operator\">+</span> rs<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>\n\t\t\t\t\t\t<span class=\"token string\">\" : \"</span> <span class=\"token operator\">+</span> rs<span class=\"token punctuation\">.</span><span class=\"token function\">getInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>\n\t\t\t\t\t\t<span class=\"token string\">\" : \"</span> <span class=\"token operator\">+</span> rs<span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\n\t\t\t<span class=\"token comment\">// 2. 컬럼명을 사용하는 방법</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span><span class=\"token function\">getInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"product_id\"</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t<span class=\"token operator\">+</span> <span class=\"token string\">\" : \"</span> <span class=\"token operator\">+</span> rs<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"product_name\"</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t<span class=\"token operator\">+</span> <span class=\"token string\">\" : \"</span> <span class=\"token operator\">+</span> rs<span class=\"token punctuation\">.</span><span class=\"token function\">getInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"price\"</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t<span class=\"token operator\">+</span> <span class=\"token string\">\" : \"</span> <span class=\"token operator\">+</span> rs<span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"reg_date\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// 데이터가 존재할때만 출력</span>\n<span class=\"token class-name\">String</span> sql <span class=\"token operator\">=</span> <span class=\"token string\">\"select * from cafe\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">ResultSet</span> rs <span class=\"token operator\">=</span> st<span class=\"token punctuation\">.</span><span class=\"token function\">executeQuery</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span><span class=\"token function\">getInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t\t  <span class=\"token operator\">+</span> <span class=\"token string\">\" : \"</span> <span class=\"token operator\">+</span> rs<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token operator\">+</span> <span class=\"token string\">\" : \"</span> <span class=\"token operator\">+</span> rs<span class=\"token punctuation\">.</span><span class=\"token function\">getInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token operator\">+</span> <span class=\"token string\">\" : \"</span> <span class=\"token operator\">+</span> rs<span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"실습문제--student\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5%EB%AC%B8%EC%A0%9C--student\" aria-label=\"실습문제  student permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습문제 : Student</h2>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#jdbc\">JDBC</a></li>\n<li><a href=\"#jdbc-%EB%93%9C%EB%9D%BC%EC%9D%B4%EB%B2%84-%EB%8B%A4%EC%9A%B4%EB%A1%9C%EB%93%9C%EC%99%80-%EC%84%B8%ED%8C%85\">JDBC 드라이버 다운로드와 세팅</a></li>\n<li><a href=\"#jdbc%EB%A1%9C-%EC%9E%90%EB%B0%94%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B3%BC-db-%EC%97%B0%EB%8F%99%ED%95%98%EA%B8%B0\">JDBC로 자바프로그램과 DB 연동하기</a></li>\n<li><a href=\"#%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-crud-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84%ED%95%B4%EB%B3%B4%EA%B8%B0\">기본적인 CRUD 기능 구현해보기</a></li>\n<li><a href=\"#%EC%8B%A4%EC%8A%B5%EB%AC%B8%EC%A0%9C--student\">실습문제 : Student</a></li>\n</ul>\n</div>","excerpt":"JDBC  : 자바에서 데이터베이스와 연결해 데이터를 주고받을 수 있게 해주는 라이브러리 sql 명령문을 자바에서 수행하면 DB로 전달 DBMS의 종류에 따라서 JDBC의 종류도 달라진다. 여기서는 Oracle (OJDBC) 를 사용 JDBC 드라이버 다운로드와 세팅 JDBC로 자바프로그램과 DB 연동하기 기본적인 DB연결 셋팅 Connnection 객체 생성 DriverManager 클래스의 getConnection()을 통해 객체 생성 getConnection(url, username, password) 기본적인 CRUD 기능 구현해보기  객체 : 오라클에게 sql문을 전송해 쿼리의 결과를 요청할 수 있게 해주는 객체  : 행에 변화를 줄 때 사용하는 메서드. 쿼리문의 INSERT, UPDATE, DELETE와 사용 메서드의 반환값으로 나오는 정수는 인자값으로 넘겨준 쿼리문을 통해서 영향을 받은 행의 개수 INSERT 기능 (데이터 삽입) UPDATE 기능 (데이터 수정) DE…","frontmatter":{"date":"April 11, 2022","title":"JDBC 1일차 - JDBC 개요","categories":"database","author":"bontaedev","emoji":"🪤"},"fields":{"slug":"/database/17-jdbc-01/"}},"next":{"id":"a7d522b0-805f-553e-973f-cf90b6da4e0c","html":"<h2 id=\"뷰-view\" style=\"position:relative;\"><a href=\"#%EB%B7%B0-view\" aria-label=\"뷰 view permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>뷰 View</h2>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">view</span> 뷰이름 <span class=\"token keyword\">as</span> <span class=\"token keyword\">select</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<ul>\n<li>하나 이상의 테이블에서 원하는 데이터를 선택해서 새로운 가상테이블을 만들어 주는 것</li>\n<li>뷰를 통해 만들어진 테이블이 물리적으로 존재하는 것은 아니고, 다른 테이블의 데이터만 조합해서 보여주는 것.</li>\n<li>특정 계정이 원본 데이블에 접근해서 모든 데이터(불필요한 데이터)에 접근하는 걸 방지할 수 있음</li>\n<li>뷰를 생성하는 권한 - 뷰의 내용을 수정하면 - 실제 원본 테이블의 데이터도 수정됨</li>\n<li>원본 테이블의 내용이 수정되면 뷰의 내용도 수정된다. - 데이터 실시간 공유 (업데이트)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">VIEW</span> <span class=\"token keyword\">TO</span> kh<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">VIEW</span> emp_view\n<span class=\"token keyword\">AS</span> <span class=\"token keyword\">SELECT</span> emp_no<span class=\"token punctuation\">,</span> emp_name<span class=\"token punctuation\">,</span> email<span class=\"token punctuation\">,</span> phone\n<span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> emp_view<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">UPDATE</span> EMPLOYEE <span class=\"token keyword\">SET</span> EMP_NAME <span class=\"token operator\">=</span><span class=\"token string\">'김동일'</span> <span class=\"token keyword\">WHERE</span> emp_name <span class=\"token operator\">=</span> <span class=\"token string\">'선동일'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">VIEW</span> emp_view<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">COMMIT</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"시퀀스sequence\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%ED%80%80%EC%8A%A4sequence\" aria-label=\"시퀀스sequence permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시퀀스(Sequence)</h2>\n<ul>\n<li>\n<p>순차적으로 정수값을 자동을 생성하는 객체 (자동 번호 발생기)</p>\n</li>\n<li>\n<p>옵션</p>\n<ol>\n<li>start with 숫자 : 몇번부터 번호를 시작할건지</li>\n<li>increment by 숫자 : 몇 단위로 숫자를 증가시킬건지</li>\n<li>maxvalue 숫자 / nomaxvalue : 시퀀스의 최대값 지정</li>\n<li>minvalue 숫자 / nominvalue : 시퀀스의 최소값 지정 / 지정x</li>\n<li>cycle / nocycle : 최대값에 도달하면 처음으로 돌아가 순번을 매길건지</li>\n<li>cache / nocache : 메모리상에 미리 시퀀스를 뽑아 올려두고 사용하는 것 / 메모리상에 올려놓지 X</li>\n</ol>\n</li>\n<li>\n<p>nextval : 현재값을 반환하고 시퀀스를 증가시킨다.</p>\n</li>\n<li>\n<p>currval : 현재값을 반환</p>\n</li>\n<li>\n<p>접속후 nextval이 단 한번도 쓰이지 않았다면 사용할수 없음</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> SEQUENCE seq_temp\n\t<span class=\"token keyword\">START</span> <span class=\"token keyword\">WITH</span> <span class=\"token number\">1</span>\n\tINCREMENT <span class=\"token keyword\">BY</span> <span class=\"token number\">1</span>\n\tNOMAXVALUE\n\tNOCYCLE\n\tnocache<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">DROP</span> sequence  seq_temp<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> USER_SEQUENCES <span class=\"token keyword\">WHERE</span> sequence_name <span class=\"token operator\">=</span> <span class=\"token string\">'SEQ_TEMP'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span> seq_temp<span class=\"token punctuation\">.</span>nextval <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> seq_temp<span class=\"token punctuation\">.</span>currval <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span>\n</code></pre></div>","frontmatter":{"date":"April 07, 2022","title":"데이터베이스 6일차 정리 - 뷰(View), 시퀀스(Sequence)","categories":"database","author":"bontaedev","emoji":"🪤"},"fields":{"slug":"/database/16-db-viewsequence/"}},"prev":{"id":"9b27aeb4-43f4-53ae-a102-f265fc9f3595","html":"<h2 id=\"sql-injection\" style=\"position:relative;\"><a href=\"#sql-injection\" aria-label=\"sql injection permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SQL Injection</h2>\n<ul>\n<li>데이터를 삽입할 때 값이 아니라 쿼리문을 삽입해서 예상치 않는 결과를 발생시킴</li>\n<li>개인 정보 유출에 악용됨.</li>\n<li>이것 때문에 Statement 말고 PreparedStatement사용</li>\n</ul>\n<h2 id=\"preparedstatement\" style=\"position:relative;\"><a href=\"#preparedstatement\" aria-label=\"preparedstatement permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PreparedStatement</h2>\n<ul>\n<li>PreparedStatement : 객체를 생성할 때 인자값으로 넘겨주는 SQL문을 미리 DBMS에 컴파일하여 올려 둠.</li>\n<li>물음표를 사용해 추후에 인자값을 세팅해줄 자리를 표시한다.</li>\n<li>추후에 ?자리에 세팅되는 값은 말그대로 값 그 자체로 들어가게 된다. (문자열로 인식)</li>\n<li>‘1 = 1’ 이러한 식을 넣어도 값으로만 인식하기 때문에 SQL Inject에 대한 방지처리가 됨.</li>\n<li>Staetement 객체보다 PreparedStatement 객체를 활용했을 때 가독성도 높아짐.</li>\n</ul>\n<h2 id=\"oracle-datesqldate---java-date의-차이\" style=\"position:relative;\"><a href=\"#oracle-datesqldate---java-date%EC%9D%98-%EC%B0%A8%EC%9D%B4\" aria-label=\"oracle datesqldate   java date의 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Oracle Date(sql.date) - Java Date의 차이</h2>\n<ul>\n<li>SimpleDateFormat : oracle date 타입의 데이터를 Java의 String으로 변환</li>\n<li>생성자의 인자값을 String으로 변환할때 어떤 형식으로 변환할 것인지 format</li>\n<li>자바에는 형식의 대소문자가 구별되므로 정확하게 적어야함.\n<ul>\n<li>oracle : 월(mm/MM) 분(mi)</li>\n<li>java : 월(MM) 분(mm)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"실습문제--student\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5%EB%AC%B8%EC%A0%9C--student\" aria-label=\"실습문제  student permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습문제 : Student</h2>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#sql-injection\">SQL Injection</a></li>\n<li><a href=\"#preparedstatement\">PreparedStatement</a></li>\n<li><a href=\"#oracle-datesqldate---java-date%EC%9D%98-%EC%B0%A8%EC%9D%B4\">Oracle Date(sql.date) - Java Date의 차이</a></li>\n<li><a href=\"#%EC%8B%A4%EC%8A%B5%EB%AC%B8%EC%A0%9C--student\">실습문제 : Student</a></li>\n</ul>\n</div>","frontmatter":{"date":"April 12, 2022","title":"JDBC 2일차 - PreparedStatement","categories":"database","author":"bontaedev","emoji":"🪤"},"fields":{"slug":"/database/18-jdbc-02/"}},"site":{"siteMetadata":{"siteUrl":"https://bontaedev.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/database/17-jdbc-01/","nextSlug":"/database/16-db-viewsequence/","prevSlug":"/database/18-jdbc-02/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}