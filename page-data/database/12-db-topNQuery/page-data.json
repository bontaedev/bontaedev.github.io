{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/database/12-db-topNQuery/",
    "result": {"data":{"cur":{"id":"f2010d2d-5f05-5255-b289-c3fe42f3a257","html":"<h2 id=\"top-n-분석-top-n-query\" style=\"position:relative;\"><a href=\"#top-n-%EB%B6%84%EC%84%9D-top-n-query\" aria-label=\"top n 분석 top n query permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Top N 분석 (Top N Query)</h2>\n<ul>\n<li>컬럼에서 가장 큰 n개의 값을 혹은 가장 작은 n개의 값을 요청할 때 사용</li>\n<li>상위/하위 n개의 데이터</li>\n<li>회사에서 가장 많이 팔린 제품 10개, 회사에서 봉급이 제일 많은 10개</li>\n<li>게시판 페이징 / 조회수가 높은 인기글</li>\n</ul>\n<h2 id=\"rownum\" style=\"position:relative;\"><a href=\"#rownum\" aria-label=\"rownum permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ROWNUM</h2>\n<ul>\n<li>출력되는 Select 문의 행마다 자동적으로 순위를 매겨주는 것</li>\n<li>default로 원래 존재하는 데이터의 순서대로 순위를 매겨준다.</li>\n<li>우리가 원하는 기준에 맞춰 이미 정렬이 된 상태의 데이터에 대해 rownum -> 순서를 매겨야 함</li>\n<li>인라인 뷰(Inline View) : 서브쿼리 안에서 월급이 제일 큰 순서대로 일단 데이터를 정렬</li>\n<li>실제 메인쿼리에서 rownum을 사용하게 되면 이미 정렬된 데이터에 대해 순서가 매겨지게 된다.</li>\n<li>인라인뷰를 계속 사용하면 쿼리문이 길어진다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\trownum<span class=\"token punctuation\">,</span> emp_name<span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> salary <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 가장 높은 급여를 받는 한 사람에 대한 순위,emp_name,salary</span>\n<span class=\"token keyword\">SELECT</span>\n\trownum<span class=\"token punctuation\">,</span> emp_name<span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> salary <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">WHERE</span> rownum <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 가장 높은 급여를 받는 5명의 순위,emp_name,salary</span>\n<span class=\"token keyword\">SELECT</span>\n\trownum<span class=\"token punctuation\">,</span> emp_name<span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> salary <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">WHERE</span> rownum <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"1row_number\" style=\"position:relative;\"><a href=\"#1row_number\" aria-label=\"1row_number permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.ROW_NUMBER()</h3>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">row_number<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> 컬럼<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">SELECT</span>\n\tROW_NUMBER<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">OVER</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> SALARY <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"순위\"</span>\n\t<span class=\"token punctuation\">,</span> emp_name\n\t<span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>over 안쪽의 컬럼 순서에 따라 정렬한 다음 순위를 매긴다.</li>\n<li>정렬 데이터에 중복값이 있다면 원래 순서대로 19,20 이런 식으로 매겨준다.</li>\n<li>예시.\n<ul>\n<li>월급을 가장 많이 받는 top5</li>\n<li>row_number 로 생성ㄹ한 순위는 ROWNUM으로 접근 가능</li>\n<li>rownum을 사용하게 되면 원래 데이터의 정렬 순서를 기준으로 5개의 데이터가 뽑혀 나오고</li>\n<li>그 다음에 Select 구문의 row_number를 통해 순서가 재정렬 되는 상황</li>\n<li>where 절에 rownum을 사용할 수 없다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-rank-over\" style=\"position:relative;\"><a href=\"#2-rank-over\" aria-label=\"2 rank over permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. RANK OVER</h3>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">rank <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> 컬럼<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">SELECT</span>\n\tRANK <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> SALARY <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"순위\"</span>\n\t<span class=\"token punctuation\">,</span> emp_name\n\t<span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>over 안의 컬럼에 따라 정렬한 다음 순위를 매긴다.</li>\n<li>중복되는 경우 19,19 이런식으로 같은 순위를 매기고, 같은 순위를 매긴 데이터만큼 건너뛰어 다음 순위를 매김.</li>\n</ul>\n<h3 id=\"3-dense_rank\" style=\"position:relative;\"><a href=\"#3-dense_rank\" aria-label=\"3 dense_rank permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. DENSE_RANK()</h3>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\tDENSE_RANK<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> salary <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"순위\"</span>\n\t<span class=\"token punctuation\">,</span> emp_name\n\t<span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>over 안의 컬럼에 따라 정렬한 다음 순위를 매긴다.</li>\n<li>중복되는 경우 똑같은 방법으로 순위를 매기고, 다음에는 순차적으로 매긴다. (19,19,20)</li>\n<li>총 데이터의 개수와 끝 순위 번호가 일치하지 않을 수 있음</li>\n</ul>\n<h2 id=\"예제문제\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C%EB%AC%B8%EC%A0%9C\" aria-label=\"예제문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제문제</h2>\n<ul>\n<li>급여를 제일 많이 받는 1~5위 사이 사원 정보</li>\n<li>테이블명.* : 다른 데이터와 함께 모든 정보를 조회하고 싶을 때</li>\n<li>row_number 컬럼은 별칭으로 가져와서 조회</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\t<span class=\"token string\">\"순위\"</span>\n\t<span class=\"token punctuation\">,</span> emp_name\n\t<span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span>\n\tROW_NUMBER<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> salary <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"순위\"</span>\n\t<span class=\"token punctuation\">,</span> employee<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span>\n\t<span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span>\n\t\tROW_NUMBER<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> salary <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"순위\"</span>\n\t\t<span class=\"token punctuation\">,</span> emp_name <span class=\"token string\">\"사원명\"</span>\n\t\t<span class=\"token punctuation\">,</span> salary <span class=\"token string\">\"봉급\"</span>\n\t\t<span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">WHERE</span> <span class=\"token string\">\"순위\"</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>5위에서 10위 사이의 사원</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span>\n\t\tROW_NUMBER<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> salary <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"순위\"</span>\n\t\t<span class=\"token punctuation\">,</span> emp_name <span class=\"token string\">\"사원명\"</span>\n\t\t<span class=\"token punctuation\">,</span> salary <span class=\"token string\">\"봉급\"</span>\n\t\t<span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">WHERE</span> <span class=\"token string\">\"순위\"</span> <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">5</span> <span class=\"token operator\">AND</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>연봉(보너스포함-(salary + (salary*bonus)*12))이 가장 높은 순서대로 순위 매김</li>\n<li>10~15위 사이인 직원들의 순위, 사원명, 연봉, 직급코드, 부서코드까지 출력</li>\n<li>부서코드가 null이라면 인턴</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span>\n\t\tROW_NUMBER<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">OVER</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>salary <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>salary <span class=\"token operator\">*</span> NVL<span class=\"token punctuation\">(</span>bonus<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"순위\"</span>\n\t\t<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>salary <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>salary <span class=\"token operator\">*</span> NVL<span class=\"token punctuation\">(</span>bonus<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"월급+보너스\"</span>\n\t\t<span class=\"token punctuation\">,</span> emp_name <span class=\"token string\">\"사원명\"</span>\n\t\t<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>salary <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>salary<span class=\"token operator\">*</span> NVL<span class=\"token punctuation\">(</span>bonus<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"연봉\"</span>\n\t\t<span class=\"token punctuation\">,</span> job_code <span class=\"token string\">\"직급코드\"</span>\n\t\t<span class=\"token punctuation\">,</span> NVL<span class=\"token punctuation\">(</span>dept_code<span class=\"token punctuation\">,</span><span class=\"token string\">'없음'</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"부서코드\"</span>\n\t<span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">WHERE</span> <span class=\"token string\">\"순위\"</span> <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">10</span> <span class=\"token operator\">AND</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>가장 보너스를 많이 받는 순으로 순위를 매김</li>\n<li>4~8위인 사원들의 순위, 이름, 급여, 보너스를 출력</li>\n<li>데이터에 null값이 있는 상태에서 정렬하면 null 값이 제일 큰 값으로 인식 (제대로 정렬 안됨)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- rownum</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span>\n\t\trow_number<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">OVER</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> <span class=\"token punctuation\">(</span>salary <span class=\"token operator\">*</span> NVL<span class=\"token punctuation\">(</span>bonus<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"순위\"</span>\n\t\t<span class=\"token punctuation\">,</span> emp_name <span class=\"token string\">\"이름\"</span>\n\t\t<span class=\"token punctuation\">,</span> salary <span class=\"token string\">\"급여\"</span>\n\t\t<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>salary <span class=\"token operator\">*</span> NVL<span class=\"token punctuation\">(</span>bonus<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"보너스\"</span>\n\t<span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">WHERE</span> <span class=\"token string\">\"순위\"</span> <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">4</span> <span class=\"token operator\">AND</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- rank over</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span>\n\t\tRANK<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">OVER</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> <span class=\"token punctuation\">(</span>NVL<span class=\"token punctuation\">(</span>bonus<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"순위\"</span>\n\t\t<span class=\"token punctuation\">,</span> emp_name <span class=\"token string\">\"이름\"</span>\n\t\t<span class=\"token punctuation\">,</span> salary <span class=\"token string\">\"급여\"</span>\n\t\t<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>NVL<span class=\"token punctuation\">(</span>bonus<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"보너스\"</span>\n\t<span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">WHERE</span> <span class=\"token string\">\"순위\"</span> <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">4</span> <span class=\"token operator\">AND</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- dense_rank</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span>\n\t\tDENSE_RANK<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">OVER</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> <span class=\"token punctuation\">(</span>NVL<span class=\"token punctuation\">(</span>bonus<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"순위\"</span>\n\t\t<span class=\"token punctuation\">,</span> emp_name <span class=\"token string\">\"이름\"</span>\n\t\t<span class=\"token punctuation\">,</span> salary <span class=\"token string\">\"급여\"</span>\n\t\t<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>NVL<span class=\"token punctuation\">(</span>bonus<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"보너스\"</span>\n\t<span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">WHERE</span> <span class=\"token string\">\"순위\"</span> <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">4</span> <span class=\"token operator\">AND</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#top-n-%EB%B6%84%EC%84%9D-top-n-query\">Top N 분석 (Top N Query)</a></p>\n</li>\n<li>\n<p><a href=\"#rownum\">ROWNUM</a></p>\n<ul>\n<li><a href=\"#1row_number\">1.ROW_NUMBER()</a></li>\n<li><a href=\"#2-rank-over\">2. RANK OVER</a></li>\n<li><a href=\"#3-dense_rank\">3. DENSE_RANK()</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%98%88%EC%A0%9C%EB%AC%B8%EC%A0%9C\">예제문제</a></p>\n</li>\n</ul>\n</div>","excerpt":"Top N 분석 (Top N Query) 컬럼에서 가장 큰 n개의 값을 혹은 가장 작은 n개의 값을 요청할 때 사용 상위/하위 n개의 데이터 회사에서 가장 많이 팔린 제품 10개, 회사에서 봉급이 제일 많은 10개 게시판 페이징 / 조회수가 높은 인기글 ROWNUM 출력되는 Select 문의 행마다 자동적으로 순위를 매겨주는 것 default로 원래 존재하는 데이터의 순서대로 순위를 매겨준다. 우리가 원하는 기준에 맞춰 이미 정렬이 된 상태의 데이터에 대해 rownum -> 순서를 매겨야 함 인라인 뷰(Inline View) : 서브쿼리 안에서 월급이 제일 큰 순서대로 일단 데이터를 정렬 실제 메인쿼리에서 rownum을 사용하게 되면 이미 정렬된 데이터에 대해 순서가 매겨지게 된다. 인라인뷰를 계속 사용하면 쿼리문이 길어진다. 1.ROW_NUMBER() over 안쪽의 컬럼 순서에 따라 정렬한 다음 순위를 매긴다. 정렬 데이터에 중복값이 있다면 원래 순서대로 19,20 이런 식으로…","frontmatter":{"date":"April 05, 2022","title":"데이터베이스 5일차 정리 - DB_TopN_분석(topNQuery)","categories":"database","author":"bontaedev","emoji":"🪤"},"fields":{"slug":"/database/12-db-topNQuery/"}},"next":{"id":"ec3aaa98-827e-58f2-870e-109051d85043","html":"<h2 id=\"ddldata-definition-language\" style=\"position:relative;\"><a href=\"#ddldata-definition-language\" aria-label=\"ddldata definition language permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DDL(Data Definition Language)</h2>\n<ul>\n<li>데이터 정의어</li>\n</ul>\n<h3 id=\"drop--테이블을-삭제하기-위해-사용하는-구문\" style=\"position:relative;\"><a href=\"#drop--%ED%85%8C%EC%9D%B4%EB%B8%94%EC%9D%84-%EC%82%AD%EC%A0%9C%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%B4-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EA%B5%AC%EB%AC%B8\" aria-label=\"drop  테이블을 삭제하기 위해 사용하는 구문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>drop : 테이블을 삭제하기 위해 사용하는 구문</h3>\n<p>DROP TABLE temp;</p>\n<h3 id=\"alter\" style=\"position:relative;\"><a href=\"#alter\" aria-label=\"alter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ALTER</h3>\n<ul>\n<li>테이블에 정의된 내용을 수정하고자 할 때 사용하는 데이터 정의어</li>\n<li>컬럼 추가삭제, 제약조건 추가삭제, 컬럼의 자료형 변경, DEFAULT 값 변경</li>\n<li>테이블명,컬럼명,제약조건의 이름 변경</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 이미 존재하는 테이블에 새로운 컬럼 추가</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> MEMBER <span class=\"token keyword\">ADD</span> <span class=\"token punctuation\">(</span>name varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 새로운 컬럼 추가 (age) + default</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> MEMBER <span class=\"token keyword\">ADD</span> <span class=\"token punctuation\">(</span>age MEMBER <span class=\"token keyword\">DEFAULT</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 제약조건 추가 - unique 추가</span>\n<span class=\"token comment\">-- 추가할 제약조건의 이름도 지어줌</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> MEMBER <span class=\"token keyword\">ADD</span> constraints id_unq <span class=\"token keyword\">unique</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span> constraint_name<span class=\"token punctuation\">,</span> constraint_type\n<span class=\"token keyword\">FROM</span> USER_CONSTRAINTS <span class=\"token keyword\">WHERE</span> TABLE_name <span class=\"token operator\">=</span> <span class=\"token string\">'MEMBER'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 제약조건 추가 - pw컬럼에 Not null 제약조건 추가</span>\n<span class=\"token comment\">-- add로 접근할 수 없고 modify로</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> MEMBER <span class=\"token keyword\">ADD</span> <span class=\"token keyword\">CONSTRAINT</span> pw_nn <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">(</span>pw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">-- x</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> MEMBER <span class=\"token keyword\">MODIFY</span> pw <span class=\"token keyword\">CONSTRAINT</span> pw_nn <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 컬럼명 수정 - pw 컬럼을 Password라고 변경</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> MEMBER <span class=\"token keyword\">RENAME</span> <span class=\"token keyword\">COLUMN</span> pw <span class=\"token keyword\">TO</span> password<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">DESC</span> MEMBER<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 컬럼의 데이터 타입 수정 - name varchar2(100) -> char(100)</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> MEMBER <span class=\"token keyword\">MODIFY</span> name <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 컬럼의 삭제 (age 컬럼 삭제)</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> MEMBER <span class=\"token keyword\">DROP</span> <span class=\"token keyword\">COLUMN</span> age<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 제약조건 삭제 -- password 컬럼의 제약조건 삭제</span>\n<span class=\"token comment\">-- 제약조건의 이름을 먼저 알야야 함</span>\n<span class=\"token keyword\">SELECT</span> constraint_name  <span class=\"token keyword\">FROM</span> USER_CONSTRAINTS <span class=\"token keyword\">WHERE</span> table_name<span class=\"token operator\">=</span><span class=\"token string\">'MEMBER'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> MEMBER <span class=\"token keyword\">DROP</span> <span class=\"token keyword\">CONSTRAINT</span> pw_nn<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">-- 제약조건명 수정</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> MEMBER <span class=\"token keyword\">RENAME</span> <span class=\"token keyword\">CONSTRAINT</span> SYS_C007112 <span class=\"token keyword\">TO</span> no_pk<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 테이블명 변경</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> MEMBER <span class=\"token keyword\">RENAME</span> <span class=\"token keyword\">TO</span> tb1_member<span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"제약조건constraints\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%EC%95%BD%EC%A1%B0%EA%B1%B4constraints\" aria-label=\"제약조건constraints permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제약조건(Constraints)</h2>\n<ul>\n<li>테이블을 생성할 때 구성하는 컬럼에 들어갈 데이터에 대해 제약조건을 설정하는 것</li>\n<li>데이터의 일관성과 정확성을 유지하기 위해서 (데이터 무결성)\n<br></li>\n<li><code class=\"language-text\">NOT NULL</code> : 해당 컬럼에 null 값이 들어갈 수 없음.</li>\n<li><code class=\"language-text\">UNIQUE</code> : 중복된 값을 허용하지 않음</li>\n<li><code class=\"language-text\">Primary Key (기본키)</code> : (NOT NULL + Unique) 고유한 식별자로 사용하는 컬럼</li>\n<li><code class=\"language-text\">Foreign Key (외래키)</code>: 두 테이블 간의 관계를 설정하고,\n<ul>\n<li>b테이블의 member_id 컬럼에 들어갈 수 있는 값이 A테이블의 ID에 있는 데이터여야 하는 경우</li>\n<li>예시 /게시글/댓글 의 관계</li>\n</ul>\n</li>\n<li><code class=\"language-text\">check</code> : 해당컬럼에 저장 가능한 값의 범위 조건을 지정해서 설정한 값만 허용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- TYPE : P이면 primary key, C이면 Check or not null</span>\n<span class=\"token keyword\">SELECT</span> CONSTRAINT_name<span class=\"token punctuation\">,</span> CONSTRAINT_type\n<span class=\"token keyword\">FROM</span> USER_CONSTRAINTS\n\t<span class=\"token keyword\">WHERE</span> table_name <span class=\"token operator\">=</span> <span class=\"token string\">'EMPLOYEE'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<ul>\n<li>제약조건을 거는 위치 (컬럼레벨 / 테이블레벨)\n<ul>\n<li>컬럼 레벨 : 컬럼명 자료형 옆에 제약조건을 명시하는 경우</li>\n<li>테이블 레벨 : 컬럼을 모두 정의한 후 마지막에 제약조건명 형식으로 제약조건을 걸어주는 방식\n<br></li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> user_cons2<span class=\"token punctuation\">(</span>\n\t<span class=\"token keyword\">NO</span> NUMBER\n\t<span class=\"token punctuation\">,</span> pw varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span>\n\t<span class=\"token punctuation\">,</span> name varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span>\n\t<span class=\"token punctuation\">,</span> gender varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">,</span> <span class=\"token keyword\">UNIQUE</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">no</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol>\n<li>NOT NULL</li>\n</ol>\n<ul>\n<li>Null 값을 허용X : 해당 컬럼에 반드시 값이 기록되어야 하는 경우</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> USER_nocons<span class=\"token punctuation\">(</span>\n\t<span class=\"token keyword\">no</span> NUMBER\n\t<span class=\"token punctuation\">,</span> pw varchar2 <span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">,</span> name varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">,</span> gender varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> user_nocons<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> USER_nocons <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'abc123'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'tom'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'남'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> USER_nocons <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span><span class=\"token string\">'여'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> user_cons<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> user_cons<span class=\"token punctuation\">(</span>\n<span class=\"token comment\">-- 컬럼형 자료형(길이) 제약조건</span>\n\t<span class=\"token keyword\">NO</span> NUMBER <span class=\"token keyword\">unique</span>\n\t<span class=\"token punctuation\">,</span> pw varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span>\n\t<span class=\"token punctuation\">,</span> name varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span>\n\t<span class=\"token punctuation\">,</span> gender varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> USER_cons<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> user_cons <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'aaa555'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'paul'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'남'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> user_cons <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token string\">'여'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 데이터를 삽입할 때부터 제약조건에 부합하지 않는다면 데이터가 들어가지 않음</span></code></pre></div>\n<ol start=\"2\">\n<li>UNIQUE</li>\n</ol>\n<ul>\n<li>해당 컬럼에 중복값을 제한하는 제약조건</li>\n<li>Null값도 들어감, 값을 안넣어도 됨</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- NO NUMBER unique</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> USER_nocons<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> user_nocons <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'eee555'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'will'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'남'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> user_cons2 <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'asdf'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'sam'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'남'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"3\">\n<li>Primary Key (기본키)</li>\n</ol>\n<ul>\n<li>컬럼의 데이터가 고유하고 null을 하용하지 않음 (고유 식별자)</li>\n<li>하나의 테이블에서 하나만 걸어줄 수 있다. (고유식별자)</li>\n<li>unique + not null 제약조건은 하나의 테이블에서도 여러번 사용이 가능하기 때문에 식별자는 아니지만 중복값과 NULL을 체크할 때 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> user_cons<span class=\"token punctuation\">(</span>\n\t<span class=\"token keyword\">NO</span> NUMBER <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span>\n\t<span class=\"token punctuation\">,</span> id varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unique</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span>\n\t<span class=\"token punctuation\">,</span> pw varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span>\n\t<span class=\"token punctuation\">,</span> nickname varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">UNIQUE</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span>\n\t<span class=\"token punctuation\">,</span> name varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span>\n\t<span class=\"token punctuation\">,</span> gender varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> user_cons <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'aaa555'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'paul'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'남'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> user_cons <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">'aaa555'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'paul'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'남'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>primary key에 대해 하나의 컬럼이 아닌 여러개의 컬럼에 대한 복합키 형태로 적용을 시키고 싶다면 컬럼레벨 에서는 불가</li>\n<li>복합키 형태로 no,id 지정</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> user_cons<span class=\"token punctuation\">(</span>\n\t<span class=\"token keyword\">NO</span> NUMBER\n\t<span class=\"token punctuation\">,</span> id varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">,</span> pw varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">,</span> gender varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">,</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">NO</span><span class=\"token punctuation\">,</span>id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"4\">\n<li>Foreign Key (외래키) : 참조 무결성을 지키기 위해서</li>\n</ol>\n<ul>\n<li>참조된 다른 테이블이 제공하는 값만 사용할 수 있도록 제약하고 싶을 때.</li>\n<li>참조하는 컬럼과 참조되는 컬럼을 통해 두 테이블 간에 관계가 생성이 됨.</li>\n<li>참조하는 컬럼이 참조되는 컬럼에 있는 값과 일치하거나, null 값만 가질 수 있음.</li>\n<li>참조하는 컬럼 : 참조 대상을 참조하는 테이블의 컬럼 (B테이블)</li>\n<li>참조되는 컬럼 : 참조 대상이 되는 테이블 컬럼 (A<em>학생</em>테이블)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">\n<span class=\"token comment\">-- 학생 테이블 / 대여 테이블</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> student<span class=\"token punctuation\">(</span>\n\tid varchar2 <span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">KEY</span>\n\t<span class=\"token punctuation\">,</span> name varchar2 <span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span>\n\t<span class=\"token punctuation\">,</span> age NUMBER <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> student <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'001'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'tom'</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> student <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'002'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'cloy'</span><span class=\"token punctuation\">,</span><span class=\"token number\">23</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> student <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'003'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'sally'</span><span class=\"token punctuation\">,</span><span class=\"token number\">22</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> student<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> bookshelf<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> bookshelf<span class=\"token punctuation\">(</span> <span class=\"token comment\">-- 테이블레벨</span>\n\tbook_id varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span>\n\t<span class=\"token punctuation\">,</span> std_id varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">,</span> rent_date <span class=\"token keyword\">DATE</span>\n\t<span class=\"token punctuation\">,</span> <span class=\"token keyword\">foreign</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>std_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> student <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- foreign key : (참조하는 컬럼) references 참조대상테이블 (참조대상컬럼)</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> bookshelf<span class=\"token punctuation\">(</span> <span class=\"token comment\">-- 컬럼레벨</span>\n\tbook_id varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span>\n\t<span class=\"token punctuation\">,</span> std_id varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> student <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">,</span> rent_date <span class=\"token keyword\">DATE</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 컬럼명 자료형(길이) references 참조대상테이블명 (참조대상 컬럼명)</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> bookshelf <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'501'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'003'</span><span class=\"token punctuation\">,</span>sysdate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> bookshelf<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 참조되고 있는 ID -> 002가 있는 행을 삭제하고 싶을 때</span>\n<span class=\"token comment\">-- 외래키 사용 : 참조되고 있는 컬럼의 데이터를 가지고 있는 자식 컬럼이 있다면</span>\n<span class=\"token comment\">-- 원본 테이블의 데이터 삭제 X</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> student<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">WHERE</span> id <span class=\"token operator\">=</span> <span class=\"token string\">'003'</span><span class=\"token punctuation\">;</span>\n\n</code></pre></div>\n<ul>\n<li>외래키 삭제옵션\n<ul>\n<li>부모테이블에서 데이터 삭제 할 때 자식 테이블에 있는 데이터를 어떤 방식으로 처리할지 결정</li>\n<li>제약조건을 걸 때 삭제 옵션도 함께 걸어 준다.</li>\n<li>(기본값)으로 붙는 옵션은 on delete no action 이다.</li>\n<li>자신을 참조하는 데이터가 있다면 삭제할 수 없다.</li>\n</ul>\n</li>\n</ul>\n<p><code class=\"language-text\">on delete set null;</code></p>\n<ul>\n<li>참조하고 있던 부모 데이터가 사라지면 자식 데이터를 NULL로 설정</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> bookshelf<span class=\"token punctuation\">(</span> <span class=\"token comment\">-- 컬럼레벨</span>\n\tbook_id varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span>\n\t<span class=\"token punctuation\">,</span> std_id varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> student <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">SET</span> <span class=\"token boolean\">NULL</span>\n\t<span class=\"token punctuation\">,</span> rent_date <span class=\"token keyword\">DATE</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> bookshelf<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">WHERE</span> id <span class=\"token operator\">=</span> <span class=\"token string\">'003'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">on delete cascade;</code></p>\n<ul>\n<li>참조하는 부모데이터가 삭제되면 참조하는 자식데이터도 함께 삭제된다.</li>\n<li>게시글이 삭제되면 댓글도 삭제된다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> bookshelf<span class=\"token punctuation\">(</span> <span class=\"token comment\">-- 컬럼레벨</span>\n\tbook_id varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span>\n\t<span class=\"token punctuation\">,</span> std_id varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> student <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">cascade</span>\n\t<span class=\"token punctuation\">,</span> rent_date <span class=\"token keyword\">DATE</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> bookshelf<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> bookshelf <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'501'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'003'</span><span class=\"token punctuation\">,</span>sysdate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">WHERE</span> id <span class=\"token operator\">=</span> <span class=\"token string\">'003'</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<ol start=\"5\">\n<li>CHECK</li>\n</ol>\n<ul>\n<li>해당 컬럼에 입력되거나 수정되어 들어오는 값을 체크해 설정한 값만 들어올 수 있게끔 제한</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> user_cons<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> user_cons<span class=\"token punctuation\">(</span>\n\t<span class=\"token keyword\">NO</span> NUMBER\n\t<span class=\"token punctuation\">,</span> id varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">,</span> pw varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">,</span> gender varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">CHECK</span> <span class=\"token punctuation\">(</span>gender <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'남'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'여'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">,</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">NO</span><span class=\"token punctuation\">,</span>id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> user_cons<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> user_cons <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'ab123'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'asdfg'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'망고'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> user_cons <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'ab123'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'asdfg'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'여'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">temp</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">temp</span><span class=\"token punctuation\">(</span>\n\tdate_one <span class=\"token keyword\">DATE</span>\n\t<span class=\"token punctuation\">,</span> date_two <span class=\"token keyword\">DATE</span> <span class=\"token keyword\">DEFAULT</span> sysdate\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token keyword\">temp</span> <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span> <span class=\"token keyword\">default</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">-- DEFAULT 키워드로 값 삽입</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token keyword\">temp</span><span class=\"token punctuation\">;</span>\n</code></pre></div>","frontmatter":{"date":"April 05, 2022","title":"데이터베이스 5일차 정리 - DB_DDL(데이터정의어), 제약조건(Constraints)","categories":"database","author":"bontaedev","emoji":"🪤"},"fields":{"slug":"/database/11-db-constraints/"}},"prev":{"id":"0db1a697-4fc1-567e-932f-a662998062f8","html":"<h2 id=\"grant--revoke\" style=\"position:relative;\"><a href=\"#grant--revoke\" aria-label=\"grant  revoke permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GRANT / REVOKE</h2>\n<ul>\n<li>사용자 또는 role(resource, connect, dba)에 대한 권한 부여</li>\n<li>system / 관리자 계정 접속 - 신규 사용자 생성 - grant 접속 권한 부여 - 리소스 권한 부여</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">USER</span> test01 IDENTIFIED <span class=\"token keyword\">BY</span> test01<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">CONNECT</span><span class=\"token punctuation\">,</span> resource <span class=\"token keyword\">TO</span> test01<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">REVOKE</span> <span class=\"token keyword\">SELECT</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">ON</span> kh<span class=\"token punctuation\">.</span>coffee <span class=\"token keyword\">FROM</span> test01<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- system 계정에서 TEST01 계정한테 KH 계정이 가지고 있는 COFFEE테이블에 접근 권한 부여</span>\n<span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">ON</span> kh<span class=\"token punctuation\">.</span>coffee <span class=\"token keyword\">TO</span> test01<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">ON</span> kh<span class=\"token punctuation\">.</span>coffee <span class=\"token keyword\">TO</span> test01<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> kh<span class=\"token punctuation\">.</span>coffee <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"date":"April 06, 2022","title":"데이터베이스 6일차 정리 - 데이터제어어(DCL)","categories":"database","author":"bontaedev","emoji":"🪤"},"fields":{"slug":"/database/13-db-dcl/"}},"site":{"siteMetadata":{"siteUrl":"https://bontaedev.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/database/12-db-topNQuery/","nextSlug":"/database/11-db-constraints/","prevSlug":"/database/13-db-dcl/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}