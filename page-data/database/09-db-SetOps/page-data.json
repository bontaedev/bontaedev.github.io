{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/database/09-db-SetOps/",
    "result": {"data":{"cur":{"id":"f54cf4c9-3391-5b9e-bd15-726fa4619ccb","html":"<h2 id=\"집합-연산자-set-operator\" style=\"position:relative;\"><a href=\"#%EC%A7%91%ED%95%A9-%EC%97%B0%EC%82%B0%EC%9E%90-set-operator\" aria-label=\"집합 연산자 set operator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>집합 연산자 Set Operator</h2>\n<ul>\n<li>두 개 이상의 테이블을 조인없이 연관된 데이터를 조회하는 방식</li>\n<li>여러 개의 질의결과(ResultSet)을 연결해서 하나로 결합하는 방식</li>\n<li>각 테이블에서 반환된 결과값을 하나의 테이블로 결합하는 방식</li>\n<li>여러개의 sql문을 사용해서 하나의 테이블로 결과를 반환받아야 하는 경우</li>\n</ul>\n<h3 id=\"union\" style=\"position:relative;\"><a href=\"#union\" aria-label=\"union permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UNION</h3>\n<ul>\n<li>합집합. 중복된 데이터를 제거하고 첫번째 컬럼을 기준으로 오름차순하여 데이터를 보여줌.</li>\n<li>각 테이블에서 조회하는 컬럼 수가 다르면 UNION 사용X</li>\n<li>조회하려는 컬럼이 서로 상호호환 불가한 데이터타입이면 union 사용 X (데이터의 일관성 유지)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> no_a <span class=\"token keyword\">FROM</span> a<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> no_b <span class=\"token keyword\">FROM</span> b<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span> no_a <span class=\"token keyword\">FROM</span> a\n<span class=\"token keyword\">UNION</span>\n<span class=\"token keyword\">SELECT</span> no_b <span class=\"token keyword\">FROM</span> b<span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"union-all\" style=\"position:relative;\"><a href=\"#union-all\" aria-label=\"union all permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UNION ALL</h3>\n<ul>\n<li>합집합. 중복된 데이터를 제거하고 정렬없이 데이터를 보여줌.</li>\n<li>조회한 결과값의 첫번째 테이블 아래로 두번째 테이블 결과값을 이어붙임</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> no_a <span class=\"token keyword\">FROM</span> A\n<span class=\"token keyword\">UNION</span> <span class=\"token keyword\">ALL</span>\n<span class=\"token keyword\">SELECT</span> no_b <span class=\"token keyword\">FROM</span> B<span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"intersect\" style=\"position:relative;\"><a href=\"#intersect\" aria-label=\"intersect permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>INTERSECT</h3>\n<ul>\n<li>교집합. 두 테이블의 쿼리 결과중 공통된 결과값만 보여줌.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> no_a <span class=\"token keyword\">FROM</span> A\n<span class=\"token keyword\">INTERSECT</span>\n<span class=\"token keyword\">SELECT</span> no_b <span class=\"token keyword\">FROM</span> B<span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"minus\" style=\"position:relative;\"><a href=\"#minus\" aria-label=\"minus permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MINUS</h3>\n<ul>\n<li>차집합. 두 테이블의 쿼리 결과중 공통된 요소를 뺀 하나의 테이블만 보여줌</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> no_b <span class=\"token keyword\">FROM</span> B\nMINUS\n<span class=\"token keyword\">SELECT</span> no_a <span class=\"token keyword\">FROM</span> A<span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"예시문제\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C%EB%AC%B8%EC%A0%9C\" aria-label=\"예시문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시문제</h3>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\temp_id<span class=\"token punctuation\">,</span> emp_name<span class=\"token punctuation\">,</span> dept_code<span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> EMPLOYEE\n\t<span class=\"token keyword\">WHERE</span> DEPT_CODE <span class=\"token operator\">=</span> <span class=\"token string\">'D5'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span>\n\temp_id<span class=\"token punctuation\">,</span> emp_name<span class=\"token punctuation\">,</span> dept_code<span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> EMPLOYEE\n\t<span class=\"token keyword\">WHERE</span> salary <span class=\"token operator\">>=</span> <span class=\"token number\">3000000</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<ul>\n<li>employee 부서코드가 D5인 사람의 사번, 사원명, 부서코드, 월급 출력</li>\n<li>월급이 300만원 이상인 사원들의 사번, 사원명, 부서코드, 월급 출력</li>\n<li>이 두가지 쿼리 결과를 집합 연산자를 이용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- UNION ALL</span>\n<span class=\"token keyword\">SELECT</span>\n\temp_id<span class=\"token punctuation\">,</span> emp_name<span class=\"token punctuation\">,</span> dept_code<span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> EMPLOYEE\n\t<span class=\"token keyword\">WHERE</span> DEPT_CODE <span class=\"token operator\">=</span> <span class=\"token string\">'D5'</span>\n<span class=\"token keyword\">UNION</span> <span class=\"token keyword\">ALL</span>\n<span class=\"token keyword\">SELECT</span>\n\temp_id<span class=\"token punctuation\">,</span> emp_name<span class=\"token punctuation\">,</span> dept_code<span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> EMPLOYEE\n\t<span class=\"token keyword\">WHERE</span> salary <span class=\"token operator\">>=</span> <span class=\"token number\">3000000</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- INTERSECT</span>\n\t<span class=\"token keyword\">SELECT</span>\n\temp_id<span class=\"token punctuation\">,</span> emp_name<span class=\"token punctuation\">,</span> dept_code<span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> EMPLOYEE\n\t<span class=\"token keyword\">WHERE</span> DEPT_CODE <span class=\"token operator\">=</span> <span class=\"token string\">'D5'</span>\n<span class=\"token keyword\">INTERSECT</span>\n<span class=\"token keyword\">SELECT</span>\n\temp_id<span class=\"token punctuation\">,</span> emp_name<span class=\"token punctuation\">,</span> dept_code<span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> EMPLOYEE\n\t<span class=\"token keyword\">WHERE</span> salary <span class=\"token operator\">>=</span> <span class=\"token number\">3000000</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- MINUS</span>\n\t<span class=\"token keyword\">SELECT</span>\n\temp_id<span class=\"token punctuation\">,</span> emp_name<span class=\"token punctuation\">,</span> dept_code<span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> EMPLOYEE\n\t<span class=\"token keyword\">WHERE</span> DEPT_CODE <span class=\"token operator\">=</span> <span class=\"token string\">'D5'</span>\nMINUS\n<span class=\"token keyword\">SELECT</span>\n\temp_id<span class=\"token punctuation\">,</span> emp_name<span class=\"token punctuation\">,</span> dept_code<span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> EMPLOYEE\n\t<span class=\"token keyword\">WHERE</span> salary <span class=\"token operator\">>=</span> <span class=\"token number\">3000000</span><span class=\"token punctuation\">;</span>\n</code></pre></div>","excerpt":"집합 연산자 Set Operator 두 개 이상의 테이블을 조인없이 연관된 데이터를 조회하는 방식 여러 개의 질의결과(ResultSet)을 연결해서 하나로 결합하는 방식 각 테이블에서 반환된 결과값을 하나의 테이블로 결합하는 방식 여러개의 sql문을 사용해서 하나의 테이블로 결과를 반환받아야 하는 경우 UNION 합집합. 중복된 데이터를 제거하고 첫번째 컬럼을 기준으로 오름차순하여 데이터를 보여줌. 각 테이블에서 조회하는 컬럼 수가 다르면 UNION 사용X 조회하려는 컬럼이 서로 상호호환 불가한 데이터타입이면 union 사용 X (데이터의 일관성 유지) UNION ALL 합집합. 중복된 데이터를 제거하고 정렬없이 데이터를 보여줌. 조회한 결과값의 첫번째 테이블 아래로 두번째 테이블 결과값을 이어붙임 INTERSECT 교집합. 두 테이블의 쿼리 결과중 공통된 결과값만 보여줌. MINUS 차집합. 두 테이블의 쿼리 결과중 공통된 요소를 뺀 하나의 테이블만 보여줌 예시문제 employe…","frontmatter":{"date":"April 04, 2022","title":"데이터베이스 4일차 정리 - 집합연산자","categories":"database","author":"bontaedev","emoji":"🪤"},"fields":{"slug":"/database/09-db-SetOps/"}},"next":{"id":"a771cb83-3e87-5a25-be95-7722058cc34a","html":"<h2 id=\"join\" style=\"position:relative;\"><a href=\"#join\" aria-label=\"join permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JOIN</h2>\n<ul>\n<li>여러 개의 테이블을 결합. 조합하려고 하는 테이블에서 각 테이블의 공통된 컬럼을 데이터로 합쳐서 표현하는 것.</li>\n<li>조건을 제시하지 않으면 이중 for문과 비슷한 형태로 동작. (모든 경우의 수를 조회)</li>\n<li>ANSI 표준 JOIN, Oracle JOIN</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">;</span> <span class=\"token comment\">--23</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> DEPARTMENT<span class=\"token punctuation\">;</span> <span class=\"token comment\">--9</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> EMPLOYEE e<span class=\"token punctuation\">,</span> DEPARTMENT d  <span class=\"token comment\">--207</span></code></pre></div>\n<ul>\n<li>\n<p>예시 : 부서코드가 같은 employee, Department 테이블의 사번, 사원명, 부서코드, 부서명 조회</p>\n</li>\n<li>\n<p>oracle syntax</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> emp_id<span class=\"token punctuation\">,</span> emp_name<span class=\"token punctuation\">,</span> dept_code<span class=\"token punctuation\">,</span> dept_title\n<span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">,</span> DEPARTMENT\n\t<span class=\"token keyword\">WHERE</span> DEPT_CODE <span class=\"token operator\">=</span> DEPT_ID<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>ANSI syntax</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> emp_id<span class=\"token punctuation\">,</span> emp_name<span class=\"token punctuation\">,</span> dept_code<span class=\"token punctuation\">,</span> dept_title\n<span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">JOIN</span> DEPARTMENT\n\t<span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span>dept_code <span class=\"token operator\">=</span> DEPT_ID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>예시 : 사번, 사원명, 직급코드 직급명 출력</li>\n<li>두개의 테이블에서 컬럼명이 같을 때</li>\n<li>각 테이블에 별칭을 붙임, 이름이 같은 컬럼명 앞에 테이블별칭.컬럼명 형식으로</li>\n<li>두 테이블의 같의 컬럼명을 using을 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- oracle syntax</span>\n<span class=\"token keyword\">SELECT</span>\n\temp_id<span class=\"token punctuation\">,</span> emp_name<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>job_code<span class=\"token punctuation\">,</span> job_name\n<span class=\"token keyword\">FROM</span> EMPLOYEE e<span class=\"token punctuation\">,</span> JOB j\n\t<span class=\"token keyword\">WHERE</span> e<span class=\"token punctuation\">.</span>JOB_CODE <span class=\"token operator\">=</span> j<span class=\"token punctuation\">.</span>JOB_CODE<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- ANSI syntax</span>\n<span class=\"token keyword\">SELECT</span>\n\temp_id<span class=\"token punctuation\">,</span> emp_name<span class=\"token punctuation\">,</span> job_code<span class=\"token punctuation\">,</span> job_name\n<span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">JOIN</span> job\n\t<span class=\"token keyword\">USING</span> <span class=\"token punctuation\">(</span>job_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"join-종류\" style=\"position:relative;\"><a href=\"#join-%EC%A2%85%EB%A5%98\" aria-label=\"join 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JOIN 종류</h2>\n<h3 id=\"cross-join\" style=\"position:relative;\"><a href=\"#cross-join\" aria-label=\"cross join permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CROSS JOIN</h3>\n<ul>\n<li>조건이 없어 모든 경우의 수가 조합되어 나오는 경우 (A X B)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">,</span> DEPARTMENT<span class=\"token punctuation\">;</span> <span class=\"token comment\">-- oracle</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">cross</span> <span class=\"token keyword\">JOIN</span> DEPARTMENT<span class=\"token punctuation\">;</span> <span class=\"token comment\">-- ansi</span></code></pre></div>\n<h3 id=\"inner-join\" style=\"position:relative;\"><a href=\"#inner-join\" aria-label=\"inner join permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>INNER JOIN</h3>\n<ul>\n<li>테이블 A와 테이블 B에 조건이 맞는 데이터만 반환 (교집합), 가장 많이 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> 컬럼<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">from</span> TB_A<span class=\"token punctuation\">,</span> TB_B <span class=\"token keyword\">WHERE</span> 조건<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">(</span>oracle<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">SELECT</span> 컬럼<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">from</span> TB_A <span class=\"token keyword\">inner</span> <span class=\"token keyword\">join</span> TB_B <span class=\"token keyword\">on</span> 조건<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">(</span>ANSI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">,</span> DEPARTMENT <span class=\"token keyword\">WHERE</span> DEPT_CODE <span class=\"token operator\">=</span> dept_id<span class=\"token punctuation\">;</span> <span class=\"token comment\">-- oracle</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">inner</span> <span class=\"token keyword\">join</span> DEPARTMENT <span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span>dept_code <span class=\"token operator\">=</span> dept_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">-- ansi</span></code></pre></div>\n<p><br><br></p>\n<ul>\n<li>예시1 : 총무부, 회계관리부인 사원들의 사원명, 이메일, 부서명, 부서코드만 조회 (조건이 있을 때)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- oracle</span>\n<span class=\"token keyword\">SELECT</span>\n\temp_name <span class=\"token string\">\"사원명\"</span>\n\t<span class=\"token punctuation\">,</span> email <span class=\"token string\">\"이메일\"</span>\n\t<span class=\"token punctuation\">,</span> dept_title <span class=\"token string\">\"부서명\"</span>\n\t<span class=\"token punctuation\">,</span> dept_id <span class=\"token string\">\"부서코드\"</span>\n<span class=\"token keyword\">from</span> EMPLOYEE<span class=\"token punctuation\">,</span> DEPARTMENT\n\t<span class=\"token keyword\">WHERE</span> DEPT_CODE <span class=\"token operator\">=</span> dept_id\n\t<span class=\"token operator\">AND</span> dept_title <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'총무부'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'회계관리부'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- ansi</span>\n<span class=\"token keyword\">SELECT</span>\n\temp_name <span class=\"token string\">\"사원명\"</span>\n\t<span class=\"token punctuation\">,</span> email <span class=\"token string\">\"이메일\"</span>\n\t<span class=\"token punctuation\">,</span> dept_title <span class=\"token string\">\"부서명\"</span>\n\t<span class=\"token punctuation\">,</span> dept_code <span class=\"token string\">\"부서코드\"</span>\n<span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> DEPARTMENT\n\t<span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span>dept_code <span class=\"token operator\">=</span> dept_id<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">WHERE</span> dept_title <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'총무부'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'회계관리부'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<ul>\n<li>예시2 : 해외영업부(1,2,3부)의 모든 직원들의 사번, 사원, 부서명, 부서코드, 연봉 출력</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- oracle</span>\n<span class=\"token keyword\">SELECT</span>\n\tEMP_ID <span class=\"token string\">\"사번\"</span>\n\t<span class=\"token punctuation\">,</span> EMP_NAME <span class=\"token string\">\"사원\"</span>\n\t<span class=\"token punctuation\">,</span> dept_title <span class=\"token string\">\"부서명\"</span>\n\t<span class=\"token punctuation\">,</span> DEPT_CODE <span class=\"token string\">\"부서코드\"</span>\n\t<span class=\"token punctuation\">,</span> TO_CHAR<span class=\"token punctuation\">(</span>FLOOR<span class=\"token punctuation\">(</span>SALARY<span class=\"token operator\">*</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'L999,999,999'</span><span class=\"token punctuation\">)</span>  <span class=\"token string\">\"연봉\"</span>\n<span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">,</span> DEPARTMENT\n\t<span class=\"token keyword\">WHERE</span> DEPT_CODE <span class=\"token operator\">=</span> dept_id\n\t<span class=\"token operator\">AND</span> dept_title <span class=\"token operator\">LIKE</span> <span class=\"token string\">'해외영업%'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">-- ansi</span>\n<span class=\"token keyword\">select</span>\n\tEMP_ID <span class=\"token string\">\"사번\"</span>\n\t<span class=\"token punctuation\">,</span> EMP_NAME <span class=\"token string\">\"사원\"</span>\n\t<span class=\"token punctuation\">,</span> dept_title <span class=\"token string\">\"부서명\"</span>\n\t<span class=\"token punctuation\">,</span> DEPT_CODE <span class=\"token string\">\"부서코드\"</span>\n\t<span class=\"token punctuation\">,</span> TO_CHAR<span class=\"token punctuation\">(</span>FLOOR<span class=\"token punctuation\">(</span>SALARY<span class=\"token operator\">*</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'L999,999,999'</span><span class=\"token punctuation\">)</span>  <span class=\"token string\">\"연봉\"</span>\n<span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> DEPARTMENT\n\t<span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span>DEPT_CODE <span class=\"token operator\">=</span> dept_id<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">WHERE</span> dept_title <span class=\"token operator\">LIKE</span> <span class=\"token string\">'해외영업%'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>예시3 : 대리 사원(직책 = 대리)들의 급여 목록 확인. 대리급 사원들의 사원명, 직급코드, 직급명, 부서코드(null은 인턴), 월급 조회</li>\n<li>월급은 통화표시와 단위표시까지. 이름 오름차순, 월급 내림차순 정렬</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- oracle</span>\n<span class=\"token keyword\">SELECT</span>\n\temp_name <span class=\"token string\">\"사원명\"</span>\n\t<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">.</span>job_code <span class=\"token string\">\"직급코드\"</span>\n\t<span class=\"token punctuation\">,</span> job_name <span class=\"token string\">\"직급명\"</span>\n\t<span class=\"token punctuation\">,</span> nvl<span class=\"token punctuation\">(</span>dept_code<span class=\"token punctuation\">,</span><span class=\"token string\">'인턴'</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"부서코드\"</span>\n\t<span class=\"token punctuation\">,</span> TO_CHAR<span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">,</span><span class=\"token string\">'L999,999,999'</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"월급\"</span>\n<span class=\"token keyword\">FROM</span> EMPLOYEE e<span class=\"token punctuation\">,</span> JOB j\n\t<span class=\"token keyword\">WHERE</span> e<span class=\"token punctuation\">.</span>job_CODE <span class=\"token operator\">=</span> j<span class=\"token punctuation\">.</span>JOB_CODE\n\t<span class=\"token operator\">AND</span> JOB_NAME <span class=\"token operator\">=</span> <span class=\"token string\">'대리'</span>\n\t<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> 사원명<span class=\"token punctuation\">,</span> salary <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">-- ansi</span>\n<span class=\"token keyword\">SELECT</span>\n\temp_name <span class=\"token string\">\"사원명\"</span>\n\t<span class=\"token punctuation\">,</span> job_CODE <span class=\"token string\">\"직급코드\"</span>\n\t<span class=\"token punctuation\">,</span> job_name <span class=\"token string\">\"직급명\"</span>\n\t<span class=\"token punctuation\">,</span> NVL<span class=\"token punctuation\">(</span>dept_code<span class=\"token punctuation\">,</span><span class=\"token string\">'인턴'</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"부서코드\"</span>\n\t<span class=\"token punctuation\">,</span> TO_CHAR<span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">,</span><span class=\"token string\">'L999,999,999'</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"월급\"</span>\n<span class=\"token keyword\">from</span> EMPLOYEE <span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> JOB\n\t<span class=\"token keyword\">USING</span> <span class=\"token punctuation\">(</span>job_CODE<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">WHERE</span> job_name <span class=\"token operator\">=</span> <span class=\"token string\">'대리'</span>\n\t<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span> <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"outer-join-leftrightouter\" style=\"position:relative;\"><a href=\"#outer-join-leftrightouter\" aria-label=\"outer join leftrightouter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OUTER JOIN (LEFT/RIGHT/OUTER)</h3>\n<ol>\n<li>LEFT OUTER JOIN</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> 컬럼<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">from</span> TB_A<span class=\"token punctuation\">,</span> TB_B <span class=\"token keyword\">where</span> 컬럼<span class=\"token operator\">=</span>컬럼<span class=\"token punctuation\">(</span><span class=\"token operator\">+</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">-- oracle</span>\n<span class=\"token keyword\">select</span> 컬럼<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">from</span> TB_A <span class=\"token keyword\">left</span> <span class=\"token keyword\">outer</span> <span class=\"token keyword\">join</span> TB_B <span class=\"token keyword\">on</span><span class=\"token operator\">/</span><span class=\"token keyword\">using</span> <span class=\"token comment\">-- ansi</span>\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token comment\">-- oracle</span>\n\temp_name<span class=\"token punctuation\">,</span> dept_title\n<span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">,</span> DEPARTMENT\n\t<span class=\"token keyword\">WHERE</span> DEPT_CODE <span class=\"token operator\">=</span> dept_id<span class=\"token punctuation\">(</span><span class=\"token operator\">+</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token comment\">-- ansi</span>\n\temp_name<span class=\"token punctuation\">,</span> dept_title\n<span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">OUTER</span> <span class=\"token keyword\">JOIN</span> DEPARTMENT\n\t<span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span>DEPT_CODE <span class=\"token operator\">=</span> dept_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>\n<p>조인하는 테이블A의 데이터를 모두, 테이블 B는 조건에 일치하는 데이터만 반환</p>\n</li>\n<li>\n<p>inner join이 조건에 맞는 데이터만 반환하는 것과 달리, 일치하지 않아도 반환</p>\n</li>\n<li>\n<p>예시 : 기술지원부를 제외하고 모든 부서 직원의 사번, 사원명, 부서명, 연봉 조회</p>\n</li>\n<li>\n<p>부서명이 없는 직원은 ‘미정’ 정렬은 부서명, 사번, 연봉 오름차순 순으로</p>\n</li>\n<li>\n<p>department, employee 테이블 사용</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\temp_id <span class=\"token string\">\"사번\"</span>\n\t<span class=\"token punctuation\">,</span> emp_name <span class=\"token string\">\"사원명\"</span>\n\t<span class=\"token punctuation\">,</span> NVL<span class=\"token punctuation\">(</span>dept_title<span class=\"token punctuation\">,</span> <span class=\"token string\">'미정'</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"부서명\"</span>\n\t<span class=\"token punctuation\">,</span> salary <span class=\"token operator\">*</span> <span class=\"token number\">12</span> <span class=\"token string\">\"연봉\"</span>\n<span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">OUTER</span> <span class=\"token keyword\">JOIN</span> DEPARTMENT\n\t<span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span>dept_code <span class=\"token operator\">=</span> dept_id<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">WHERE</span> DEPT_TITLE <span class=\"token operator\">!=</span> <span class=\"token string\">'기술지원부'</span>\n\t<span class=\"token operator\">OR</span> dept_code <span class=\"token operator\">IS</span> <span class=\"token boolean\">NULL</span>\n\t<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> 부서명<span class=\"token punctuation\">,</span> 사번 <span class=\"token punctuation\">,</span>연봉<span class=\"token punctuation\">;</span></code></pre></div>\n<p>데이터에 NULL값이 있을때 주의할 점</p>\n<ul>\n<li>원래 null 값이 있는 데이터를 빠뜨리지 않고 출력하려면 null값에 대한 조건을 우회적으로 설정</li>\n<li>NOT LIKE(!=) 같은 연산자로 비교하는 것은 equal 비교를 위한 것</li>\n<li>null 값 비교를 위한 연산자가 따로 있음</li>\n<li>따라서 equal 비교를 할때는 NULL값은 제외되기 때문에 null 값 비교를 위한 조건을 추가해 우회.</li>\n<li>!= = like not like 같은 equal 연산자를 이용하게 되면 제대로 된 비교가 이루어지지 않음.</li>\n</ul>\n<ol start=\"2\">\n<li>RIGHT OUTER JOIN</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> 컬럼<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">from</span> TB_A<span class=\"token punctuation\">,</span> TB_B <span class=\"token keyword\">where</span> 컬럼<span class=\"token punctuation\">(</span><span class=\"token operator\">+</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> 컬럼<span class=\"token punctuation\">;</span> <span class=\"token comment\">-- oracle</span>\n<span class=\"token keyword\">select</span> 컬럼<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">from</span> TB_A<span class=\"token punctuation\">,</span> <span class=\"token keyword\">right</span> <span class=\"token keyword\">outer</span> <span class=\"token keyword\">join</span> TB_B <span class=\"token keyword\">on</span><span class=\"token operator\">/</span><span class=\"token keyword\">using</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">-- ansi</span>\n\n<span class=\"token keyword\">SELECT</span>\n\temp_name\n\t<span class=\"token punctuation\">,</span> dept_title\n<span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">,</span> DEPARTMENT\n\t<span class=\"token keyword\">WHERE</span> DEPT_CODE<span class=\"token punctuation\">(</span><span class=\"token operator\">+</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> dept_id<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span>\n\temp_name\n\t<span class=\"token punctuation\">,</span> dept_title\n<span class=\"token keyword\">FROM</span> DEPARTMENT <span class=\"token keyword\">RIGHT</span> <span class=\"token keyword\">OUTER</span> <span class=\"token keyword\">JOIN</span> EMPLOYEE\n\t<span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span>dept_code <span class=\"token operator\">=</span> DEPT_ID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>조인하고자 하는 테이블 A와 B가 있을때 B는 조건에 상관없이 모든 데이터, A는 조건에 맞는 데이터만</li>\n</ul>\n<ol start=\"3\">\n<li>Full Outer Join (합집합)</li>\n</ol>\n<ul>\n<li>조인할 때 조건에 맞지 않더라도 모든 데이터 출력</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\tEMP_NAME\n\t<span class=\"token punctuation\">,</span> DEPT_TITLE\n<span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">FULL</span> <span class=\"token keyword\">OUTER</span> <span class=\"token keyword\">JOIN</span> DEPARTMENT\n\t<span class=\"token keyword\">ON</span><span class=\"token punctuation\">(</span>DEPT_CODE <span class=\"token operator\">=</span> DEPT_ID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"self-join\" style=\"position:relative;\"><a href=\"#self-join\" aria-label=\"self join permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SELF JOIN</h3>\n<ul>\n<li>똑같은 테이블을 join 하기 때문에 테이블에 별칭을 반드시 지정하고 사용한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 각각의 사원들에 대한 manager_id 확인</span>\n<span class=\"token keyword\">SELECT</span> emp_id <span class=\"token punctuation\">,</span> emp_name <span class=\"token punctuation\">,</span> manager_id <span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- manger_id에 해당하는 사원명(매니저명)도 추가하고 싶다면?</span>\n<span class=\"token keyword\">SELECT</span>\n\te1<span class=\"token punctuation\">.</span>emp_id <span class=\"token string\">\"직원사번\"</span>\n\t<span class=\"token punctuation\">,</span> e1<span class=\"token punctuation\">.</span>emp_name <span class=\"token string\">\"직원명\"</span>\n\t<span class=\"token punctuation\">,</span> e1<span class=\"token punctuation\">.</span>manager_id <span class=\"token string\">\"매니저사번\"</span>\n\t<span class=\"token punctuation\">,</span> e2<span class=\"token punctuation\">.</span>emp_name <span class=\"token string\">\"매니저명\"</span>\n<span class=\"token keyword\">FROM</span> EMPLOYEE e1 <span class=\"token keyword\">JOIN</span> EMPLOYEE e2\n\t<span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span>e1<span class=\"token punctuation\">.</span>MANAGER_ID <span class=\"token operator\">=</span> e2<span class=\"token punctuation\">.</span>EMP_ID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<ul>\n<li>예시 : 매니저명과 해당 매니저가 관리하고 있는 사원명,급여를 조회</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\te1<span class=\"token punctuation\">.</span>EMP_NAME <span class=\"token string\">\"매니저명\"</span>\n\t<span class=\"token punctuation\">,</span> e2<span class=\"token punctuation\">.</span>emp_name <span class=\"token string\">\"사원명\"</span>\n\t<span class=\"token punctuation\">,</span> e2<span class=\"token punctuation\">.</span>salary <span class=\"token string\">\"급여\"</span>\n<span class=\"token keyword\">FROM</span> EMPLOYEE e1 <span class=\"token keyword\">JOIN</span> EMPLOYEE e2\n\t<span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span>e1<span class=\"token punctuation\">.</span>MANAGER_ID <span class=\"token operator\">=</span> e2<span class=\"token punctuation\">.</span>EMP_ID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"다중-join--여러개의-조인문\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EC%A4%91-join--%EC%97%AC%EB%9F%AC%EA%B0%9C%EC%9D%98-%EC%A1%B0%EC%9D%B8%EB%AC%B8\" aria-label=\"다중 join  여러개의 조인문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다중 JOIN : 여러개의 조인문</h3>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n\temp_id <span class=\"token string\">\"사번\"</span>\n\t<span class=\"token punctuation\">,</span> emp_name <span class=\"token string\">\"사원명\"</span>\n\t<span class=\"token punctuation\">,</span> dept_code <span class=\"token string\">\"부서코드\"</span>\n\t<span class=\"token punctuation\">,</span> dept_title <span class=\"token string\">\"부서명\"</span>\n<span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">JOIN</span> DEPARTMENT\n\t<span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span>dept_code <span class=\"token operator\">=</span> DEPT_ID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>사번,사원명,부서코드,부서명 + 여기서 부서지역명도 알아야 한다면?</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- ANSI</span>\n <span class=\"token keyword\">SELECT</span>\n\temp_id <span class=\"token string\">\"사번\"</span>\n\t<span class=\"token punctuation\">,</span> emp_name <span class=\"token string\">\"사원명\"</span>\n\t<span class=\"token punctuation\">,</span> dept_code <span class=\"token string\">\"부서코드\"</span>\n\t<span class=\"token punctuation\">,</span> dept_title <span class=\"token string\">\"부서명\"</span>\n\t<span class=\"token punctuation\">,</span> local_name <span class=\"token string\">\"부서지역명\"</span>\n<span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">JOIN</span> DEPARTMENT <span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span>dept_code <span class=\"token operator\">=</span> DEPT_ID<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">JOIN</span> LOCATION <span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span>LOCATION_ID <span class=\"token operator\">=</span> local_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- oracle</span>\n<span class=\"token keyword\">SELECT</span>\n\temp_id <span class=\"token string\">\"사번\"</span>\n\t<span class=\"token punctuation\">,</span> emp_name <span class=\"token string\">\"사원명\"</span>\n\t<span class=\"token punctuation\">,</span> dept_code <span class=\"token string\">\"부서코드\"</span>\n\t<span class=\"token punctuation\">,</span> dept_title <span class=\"token string\">\"부서명\"</span>\n\t<span class=\"token punctuation\">,</span> local_name <span class=\"token string\">\"부서지역명\"</span>\n<span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">,</span> DEPARTMENT<span class=\"token punctuation\">,</span> LOCATION\n\t<span class=\"token keyword\">WHERE</span> DEPT_CODE <span class=\"token operator\">=</span> dept_id\n\t<span class=\"token operator\">AND</span> location_id <span class=\"token operator\">=</span>LOCAL_CODE<span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"non-equi-join-비등가-조인\" style=\"position:relative;\"><a href=\"#non-equi-join-%EB%B9%84%EB%93%B1%EA%B0%80-%EC%A1%B0%EC%9D%B8\" aria-label=\"non equi join 비등가 조인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Non-Equi JOIN (비등가 조인)</h3>\n<ul>\n<li>지정한 컬럼의 값이 일치하는 경우가 아니라 값의 범위에 포함되는 행을 연결 (between &#x3C; > &#x3C;= 등)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- emp_id, emp_name, salary, sal_level</span>\n<span class=\"token comment\">-- -> sal_level이 min_sal과 max_sal 사이인 경우에만</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> SAL_GRADE<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span> emp_id<span class=\"token punctuation\">,</span> emp_name<span class=\"token punctuation\">,</span> salary<span class=\"token punctuation\">,</span> sg<span class=\"token punctuation\">.</span>sal_level\n<span class=\"token keyword\">FROM</span> EMPLOYEE e <span class=\"token keyword\">JOIN</span> SAL_GRADE sg\n\t<span class=\"token keyword\">ON</span><span class=\"token punctuation\">(</span>salary <span class=\"token operator\">BETWEEN</span> MIN_SAL <span class=\"token operator\">AND</span> MAX_SAL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>","frontmatter":{"date":"March 31, 2022","title":"데이터베이스 3일차 정리 - DB_JOIN구문","categories":"database","author":"bontaedev","emoji":"🪤"},"fields":{"slug":"/database/08-db-0302/"}},"prev":{"id":"0f597266-2d8d-5292-833b-23c3c4d35b48","html":"<h2 id=\"서브쿼리-sub-query\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B8%8C%EC%BF%BC%EB%A6%AC-sub-query\" aria-label=\"서브쿼리 sub query permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서브쿼리 (Sub Query)</h2>\n<ul>\n<li>하나의 SQL문 안에 포함된 다른 SQL문</li>\n<li>메인쿼리가 서브쿼리를 포함하는 종속적 관계</li>\n<li>서브쿼리는 소괄호로 묶어줌 / 연산자의 오른쪽에 위치 / order by는 subquey안에서 사용불가</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 전지연 직원의 매니저명을 출력</span>\n<span class=\"token comment\">-- 전지연 직원의 매니저 ID</span>\n\n<span class=\"token keyword\">SELECT</span> emp_name<span class=\"token punctuation\">,</span> manager_id\n<span class=\"token keyword\">FROM</span> EMPLOYEE\n\t<span class=\"token keyword\">WHERE</span> EMP_NAME <span class=\"token operator\">=</span> <span class=\"token string\">'전지연'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">-- 214</span>\n\n<span class=\"token comment\">-- 매니저 ID와 사번이 같은 직원명 = 매니저명</span>\n<span class=\"token keyword\">SELECT</span>\n\temp_id<span class=\"token punctuation\">,</span> emp_name\n<span class=\"token keyword\">FROM</span> EMPLOYEE\n\t<span class=\"token keyword\">WHERE</span> EMP_ID <span class=\"token operator\">=</span> <span class=\"token string\">'214'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">-- 방명수</span>\n\n<span class=\"token keyword\">SELECT</span>\n\temp_id<span class=\"token punctuation\">,</span> emp_name\n<span class=\"token keyword\">FROM</span> EMPLOYEE\n\t<span class=\"token keyword\">WHERE</span> EMP_ID <span class=\"token operator\">=</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> MANAGER_ID <span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">WHERE</span> EMP_NAME <span class=\"token operator\">=</span> <span class=\"token string\">'전지연'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"서브쿼리-종류\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B8%8C%EC%BF%BC%EB%A6%AC-%EC%A2%85%EB%A5%98\" aria-label=\"서브쿼리 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서브쿼리 종류</h2>\n<ul>\n<li>단일행, 다중행, 다중열, 다중행다중열, 상호연관, 스킬라</li>\n</ul>\n<h3 id=\"1-단일행-서브쿼리--서브쿼리-조회결과-값이-1개-행\" style=\"position:relative;\"><a href=\"#1-%EB%8B%A8%EC%9D%BC%ED%96%89-%EC%84%9C%EB%B8%8C%EC%BF%BC%EB%A6%AC--%EC%84%9C%EB%B8%8C%EC%BF%BC%EB%A6%AC-%EC%A1%B0%ED%9A%8C%EA%B2%B0%EA%B3%BC-%EA%B0%92%EC%9D%B4-1%EA%B0%9C-%ED%96%89\" aria-label=\"1 단일행 서브쿼리  서브쿼리 조회결과 값이 1개 행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 단일행 서브쿼리 : 서브쿼리 조회결과 값이 1개 행</h3>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 전 직원의 급여평균보다 급여를 많이 받은 사원의 사번, 사원명, 직급코드, 월급 조회</span>\n<span class=\"token keyword\">SELECT</span> FLOOR<span class=\"token punctuation\">(</span><span class=\"token function\">avg</span><span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span>\n\temp_id<span class=\"token punctuation\">,</span> emp_name<span class=\"token punctuation\">,</span> job_code<span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> EMPLOYEE\n\t<span class=\"token keyword\">WHERE</span> SALARY <span class=\"token operator\">></span> <span class=\"token number\">3047662</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 서브쿼리 사용</span>\n<span class=\"token keyword\">SELECT</span>\n\temp_id<span class=\"token punctuation\">,</span> emp_name<span class=\"token punctuation\">,</span> job_code<span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> EMPLOYEE\n\t<span class=\"token keyword\">WHERE</span> SALARY <span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> FLOOR<span class=\"token punctuation\">(</span><span class=\"token function\">avg</span><span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 윤은해 직원과 급여가 같은 사원들을 검색. 사번,사원명,급여 출력 (단 윤은혜 출력 X)</span>\n\n<span class=\"token keyword\">SELECT</span> salary <span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">WHERE</span> EMP_NAME <span class=\"token operator\">=</span> <span class=\"token string\">'윤은해'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">-- 2000000</span>\n\n<span class=\"token keyword\">SELECT</span>\n\temp_id<span class=\"token punctuation\">,</span> emp_name<span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> EMPLOYEE\n\t<span class=\"token keyword\">WHERE</span> SALARY <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> salary <span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">WHERE</span> EMP_NAME <span class=\"token operator\">=</span> <span class=\"token string\">'윤은해'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token operator\">AND</span> EMP_NAME <span class=\"token operator\">!=</span> <span class=\"token string\">'윤은해'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- employee테이블에서 급여가 제일 높은 사람과 제일 낮은 사람의 사번, 직원명, 급여 조회</span>\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token function\">MAX</span><span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span>\n\temp_id<span class=\"token punctuation\">,</span> emp_name<span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> EMPLOYEE\n\t<span class=\"token keyword\">WHERE</span> SALARY <span class=\"token operator\">IN</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token function\">MAX</span><span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token function\">MIN</span><span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- D5부서 직원들의 평균월급(소수점버림)보다 더 많은 월급을 받는 D1,D2부서 직원의</span>\n<span class=\"token comment\">-- 사번, 부서번호, 사원명, 월급 조회</span>\n\n<span class=\"token keyword\">SELECT</span> FLOOR<span class=\"token punctuation\">(</span><span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">WHERE</span> DEPT_CODE <span class=\"token operator\">=</span> <span class=\"token string\">'D5'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span>\n\temp_id<span class=\"token punctuation\">,</span> dept_code<span class=\"token punctuation\">,</span> emp_name<span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> EMPLOYEE\n\t<span class=\"token keyword\">WHERE</span> SALARY <span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> FLOOR<span class=\"token punctuation\">(</span><span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">WHERE</span> DEPT_CODE <span class=\"token operator\">=</span> <span class=\"token string\">'D5'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token operator\">AND</span> DEPT_CODE <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'D1'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'D2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"2-다중행-서브쿼리--조회-결과가-여러개여러행\" style=\"position:relative;\"><a href=\"#2-%EB%8B%A4%EC%A4%91%ED%96%89-%EC%84%9C%EB%B8%8C%EC%BF%BC%EB%A6%AC--%EC%A1%B0%ED%9A%8C-%EA%B2%B0%EA%B3%BC%EA%B0%80-%EC%97%AC%EB%9F%AC%EA%B0%9C%EC%97%AC%EB%9F%AC%ED%96%89\" aria-label=\"2 다중행 서브쿼리  조회 결과가 여러개여러행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 다중행 서브쿼리 : 조회 결과가 여러개(여러행)</h3>\n<ul>\n<li>다중행 서브쿼리 앞에는 != 연산자 못씀</li>\n<li>IN, NOT IN, ANY, ALL, EXISTS 등과 같이 쓰임</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 송종기 박나라 사원과 속해있는 부서와 같은 부서원들의 모든 정보 출력</span>\n<span class=\"token keyword\">SELECT</span> emp_name<span class=\"token punctuation\">,</span> dept_code <span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">WHERE</span> EMP_NAME <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'송종기'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'박나라'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">WHERE</span> DEPT_CODE <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'D5'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'D9'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> EMPLOYEE\n\t<span class=\"token keyword\">WHERE</span> DEPT_CODE <span class=\"token operator\">IN</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> DEPT_CODE <span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">WHERE</span> EMP_NAME <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'송종기'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'박나라'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 차태연, 전지연 사원의 급여등급(sal_level)과 같은 등급을 가진</span>\n<span class=\"token comment\">-- 사원의 직급명, 사원명, 급여등급 출력</span>\n\n<span class=\"token keyword\">SELECT</span> emp_name<span class=\"token punctuation\">,</span> sal_level <span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">WHERE</span> EMP_NAME <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'차태연'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'전지연'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span>\n\tJOB_NAME <span class=\"token string\">\"직급명\"</span>\n\t<span class=\"token punctuation\">,</span> emp_name <span class=\"token string\">\"사원명\"</span>\n\t<span class=\"token punctuation\">,</span> sal_level <span class=\"token string\">\"급여등급\"</span>\n<span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">JOIN</span> JOB\n\t<span class=\"token keyword\">USING</span> <span class=\"token punctuation\">(</span>job_code<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">WHERE</span> SAL_LEVEL <span class=\"token operator\">IN</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> SAL_LEVEL <span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">WHERE</span> EMP_NAME <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'차태연'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'전지연'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">\n<span class=\"token comment\">-- IN</span>\n<span class=\"token comment\">-- 직급이 대표, 부사장이 아닌 직원들의 사원명, 부서명, 직급코드</span>\n<span class=\"token comment\">-- 정렬은 부서명, 사원명 순으로 오름차순</span>\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> DEPARTMENT<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> job<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span> job_name<span class=\"token punctuation\">,</span> JOB_CODE <span class=\"token keyword\">FROM</span> job <span class=\"token keyword\">WHERE</span> JOB_NAME <span class=\"token operator\">NOT</span> <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'대표'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'부사장'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span>\n\temp_name <span class=\"token string\">\"사원명\"</span>\n\t<span class=\"token punctuation\">,</span> dept_title <span class=\"token string\">\"부서명\"</span>\n\t<span class=\"token punctuation\">,</span> job_code <span class=\"token string\">\"직급코드\"</span>\n\t<span class=\"token punctuation\">,</span> job_name <span class=\"token string\">\"직급명\"</span>\n<span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">OUTER</span> <span class=\"token keyword\">JOIN</span> DEPARTMENT\n\t<span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span>dept_code <span class=\"token operator\">=</span> DEPT_ID<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">JOIN</span> JOB <span class=\"token keyword\">USING</span> <span class=\"token punctuation\">(</span>job_code<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">WHERE</span> job_code <span class=\"token operator\">IN</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> JOB_CODE <span class=\"token keyword\">FROM</span> job <span class=\"token keyword\">WHERE</span> job_name <span class=\"token operator\">NOT</span> <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'대표'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'부사장'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> 부서명<span class=\"token punctuation\">,</span> 사원명<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">-- ANY : 서브쿼리의 결과 중에 하나라도 참이라고 한다면 참</span>\n<span class=\"token comment\">-- 값 > any(1,2,3) : 왼쪽에 있는 값이 오른쪽의 최소값보다 크면 된다.</span>\n<span class=\"token comment\">-- 값 &lt; any(1,2,3) : 왼쪽에 있는 값이 오른쪽의 최대값보다 작으면 된다.</span>\n<span class=\"token comment\">-- 값 = any(1,2,3) : IN과 같은 역할</span>\n<span class=\"token comment\">-- 값 != any(1,2,3) : NOT IN 과 같은 역할</span>\n\n<span class=\"token comment\">-- 급여가 200만원 혹은 300만원보다 큰 사람의 사원명, 급여 출력</span>\n\n<span class=\"token keyword\">SELECT</span> emp_name <span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> EMPLOYEE\n<span class=\"token keyword\">WHERE</span> SALARY <span class=\"token operator\">></span> <span class=\"token number\">2000000</span> <span class=\"token operator\">OR</span> SALARY <span class=\"token operator\">></span> <span class=\"token number\">3000000</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span>\n\temp_name<span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> EMPLOYEE\n\t<span class=\"token keyword\">WHERE</span> SALARY <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">ANY</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2000000</span><span class=\"token punctuation\">,</span><span class=\"token number\">3000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span>\n\temp_name<span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> EMPLOYEE\n\t<span class=\"token keyword\">WHERE</span> SALARY <span class=\"token operator\">!=</span> <span class=\"token keyword\">ANY</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2000000</span><span class=\"token punctuation\">,</span><span class=\"token number\">3000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- job_code가 J3인 사원들의 급여보다 더 많은 급여를 받는 사원들의 이름,급여</span>\n\n<span class=\"token keyword\">SELECT</span> salary <span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">WHERE</span> JOB_CODE <span class=\"token operator\">=</span><span class=\"token string\">'J3'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span> emp_name<span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> EMPLOYEE\n\t<span class=\"token keyword\">WHERE</span> SALARY <span class=\"token operator\">></span> <span class=\"token keyword\">ANY</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> salary <span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">WHERE</span> JOB_CODE <span class=\"token operator\">=</span><span class=\"token string\">'J3'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- D1,D5 부서코드를 가진 사원들의 급여보다 적게 받는 사원들의 사원명, 급여, 부서코드 출력</span>\n<span class=\"token comment\">-- 단 D1,D5 부서 직원은 출력 X</span>\n<span class=\"token comment\">-- 정렬은 부서코드 기준 오름차순 출력</span>\n\n<span class=\"token keyword\">SELECT</span> salary <span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">WHERE</span> DEPT_CODE <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'D1'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'D5'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span>\n\temp_name <span class=\"token string\">\"사원명\"</span>\n\t<span class=\"token punctuation\">,</span> salary <span class=\"token string\">\"급여\"</span>\n\t<span class=\"token punctuation\">,</span> dept_code <span class=\"token string\">\"부서코드\"</span>\n<span class=\"token keyword\">FROM</span> EMPLOYEE\n\t<span class=\"token keyword\">WHERE</span> SALARY <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">ANY</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> salary <span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">WHERE</span> DEPT_CODE <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'D1'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'D5'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token operator\">AND</span> NVL<span class=\"token punctuation\">(</span>DEPT_CODE<span class=\"token punctuation\">,</span><span class=\"token string\">'없음'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'D1'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'D5'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> 부서코드<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- NOT IN은 equal 비교이기 때문에 null은 IS NULL 비교로 해야한다.</span>\n\n\n\n<span class=\"token comment\">-- ALL : 서브쿼리 결과 중에 모든 것이 참이여야 한다.</span>\n<span class=\"token comment\">-- 값 > all (1,2,3) : 왼쪽의 값이 모든 값보다 커야한다.</span>\n<span class=\"token comment\">-- 값 &lt; all (1,2,3) : 왼쪽의 값이 모든 값보다 작아야 한다.</span>\n\n<span class=\"token comment\">-- job_code가 J3인 직원 중에서 가장 큰 급여보다 더 많은 급여를 받는 사원들의 사원명, 급여</span>\n\n<span class=\"token keyword\">SELECT</span> salary <span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">WHERE</span> JOB_CODE <span class=\"token operator\">=</span> <span class=\"token string\">'J3'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span> emp_name<span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> EMPLOYEE\n\t<span class=\"token keyword\">WHERE</span> salary <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">all</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> salary <span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">WHERE</span> JOB_CODE <span class=\"token operator\">=</span> <span class=\"token string\">'J3'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"3-다중열-서브쿼리--서브쿼리-조회결과-값이-여러개-열-일때\" style=\"position:relative;\"><a href=\"#3-%EB%8B%A4%EC%A4%91%EC%97%B4-%EC%84%9C%EB%B8%8C%EC%BF%BC%EB%A6%AC--%EC%84%9C%EB%B8%8C%EC%BF%BC%EB%A6%AC-%EC%A1%B0%ED%9A%8C%EA%B2%B0%EA%B3%BC-%EA%B0%92%EC%9D%B4-%EC%97%AC%EB%9F%AC%EA%B0%9C-%EC%97%B4-%EC%9D%BC%EB%95%8C\" aria-label=\"3 다중열 서브쿼리  서브쿼리 조회결과 값이 여러개 열 일때 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 다중열 서브쿼리 : 서브쿼리 조회결과 값이 여러개 열 일때</h3>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 퇴사한 여직원 : 같은부서, 같은 직급에 해당하는 사원의 사원명, 직급코드, 부서코드, 입사일 조회</span>\n\n<span class=\"token keyword\">SELECT</span> dept_code<span class=\"token punctuation\">,</span> job_code\n<span class=\"token keyword\">FROM</span> EMPLOYEE\n\t<span class=\"token keyword\">WHERE</span> ENT_YN <span class=\"token operator\">=</span> <span class=\"token string\">'Y'</span>\n\t<span class=\"token operator\">AND</span> SUBSTR<span class=\"token punctuation\">(</span>EMP_NO<span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">-- D8,J6</span>\n\n<span class=\"token keyword\">SELECT</span>\n\temp_name<span class=\"token punctuation\">,</span> job_code <span class=\"token punctuation\">,</span> dept_code<span class=\"token punctuation\">,</span> hire_date\n<span class=\"token keyword\">FROM</span> EMPLOYEE\n\t<span class=\"token keyword\">WHERE</span> DEPT_CODE <span class=\"token operator\">=</span> <span class=\"token string\">'D8'</span> <span class=\"token operator\">AND</span> JOB_CODE <span class=\"token operator\">=</span> <span class=\"token string\">'J6'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span>\n\temp_name<span class=\"token punctuation\">,</span> job_code <span class=\"token punctuation\">,</span> dept_code<span class=\"token punctuation\">,</span> hire_date\n<span class=\"token keyword\">FROM</span> EMPLOYEE\n\t<span class=\"token keyword\">WHERE</span> <span class=\"token punctuation\">(</span>DEPT_CODE<span class=\"token punctuation\">,</span> JOB_CODE<span class=\"token punctuation\">)</span> <span class=\"token operator\">IN</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> dept_code<span class=\"token punctuation\">,</span> job_code <span class=\"token keyword\">FROM</span> EMPLOYEE\n\t<span class=\"token keyword\">WHERE</span> ENT_YN <span class=\"token operator\">=</span> <span class=\"token string\">'Y'</span> <span class=\"token operator\">AND</span> SUBSTR<span class=\"token punctuation\">(</span>EMP_NO<span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">-- 하이유 직원과 같은 Manager 를 가지고 있고, 같은 급여레벨을 가지고 있는 사원의</span>\n<span class=\"token comment\">-- 이름, 급여레벨, 매니저 ID를 조회 (하이유 제외)</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span> manager_id<span class=\"token punctuation\">,</span> sal_level <span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">WHERE</span> emp_name <span class=\"token operator\">=</span> <span class=\"token string\">'하이유'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span>\n\temp_name<span class=\"token punctuation\">,</span> sal_level<span class=\"token punctuation\">,</span> manager_id\n<span class=\"token keyword\">FROM</span> EMPLOYEE\n\t<span class=\"token keyword\">WHERE</span> <span class=\"token punctuation\">(</span>MANAGER_ID<span class=\"token punctuation\">,</span> SAL_LEVEL<span class=\"token punctuation\">)</span> <span class=\"token operator\">IN</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> manager_id<span class=\"token punctuation\">,</span> sal_level <span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">WHERE</span> emp_name <span class=\"token operator\">=</span> <span class=\"token string\">'하이유'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token operator\">AND</span> EMP_NAME <span class=\"token operator\">!=</span> <span class=\"token string\">'하이유'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 기술지원부이면서 급여가 200만원인 직원의</span>\n<span class=\"token comment\">-- 사원명, 부서코드, 급여, 부서의 지역명 출력</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> DEPARTMENT<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> LOCATION<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span> dept_title<span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">JOIN</span> DEPARTMENT\n\t<span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span>DEPT_CODE <span class=\"token operator\">=</span> dept_id<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">WHERE</span> dept_title <span class=\"token operator\">=</span> <span class=\"token string\">'기술지원부'</span> <span class=\"token operator\">AND</span> salary <span class=\"token operator\">=</span> <span class=\"token number\">2000000</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span>\n\temp_name <span class=\"token string\">\"사원명\"</span>\n\t<span class=\"token punctuation\">,</span> dept_code <span class=\"token string\">\"부서코드\"</span>\n\t<span class=\"token punctuation\">,</span> salary <span class=\"token string\">\"급여\"</span>\n\t<span class=\"token punctuation\">,</span> local_name <span class=\"token string\">\"부서지역명\"</span>\n<span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">JOIN</span> DEPARTMENT\n\t<span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span>DEPT_CODE <span class=\"token operator\">=</span> dept_id<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">JOIN</span> LOCATION\n\t<span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span>location_id <span class=\"token operator\">=</span> local_code<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">WHERE</span> dept_title <span class=\"token operator\">=</span> <span class=\"token string\">'기술지원부'</span>\n\t<span class=\"token operator\">AND</span> salary <span class=\"token operator\">=</span> <span class=\"token number\">2000000</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- employee 테이블과 Location 테이블만 join하고 다중열 서브쿼리를 사용</span>\n<span class=\"token comment\">-- 원하는 데이터만 뽑은 다음 비교</span>\n\n<span class=\"token keyword\">SELECT</span>\n\temp_name <span class=\"token string\">\"사원명\"</span>\n\t<span class=\"token punctuation\">,</span> dept_code <span class=\"token string\">\"부서코드\"</span>\n\t<span class=\"token punctuation\">,</span> salary <span class=\"token string\">\"급여\"</span>\n\t<span class=\"token punctuation\">,</span> local_name <span class=\"token string\">\"부서지역명\"</span>\n\t<span class=\"token punctuation\">,</span> local_code\n<span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">,</span> LOCATION <span class=\"token comment\">-- 기술지원부 - dept_id / location_id 를 찾기</span>\n\t<span class=\"token keyword\">WHERE</span> <span class=\"token punctuation\">(</span>DEPT_CODE<span class=\"token punctuation\">,</span> local_code<span class=\"token punctuation\">)</span> <span class=\"token operator\">IN</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> dept_id<span class=\"token punctuation\">,</span> location_id <span class=\"token keyword\">FROM</span> DEPARTMENT\n\t<span class=\"token keyword\">WHERE</span> dept_title <span class=\"token operator\">=</span> <span class=\"token string\">'기술지원부'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token operator\">AND</span> SALARY <span class=\"token operator\">=</span> <span class=\"token number\">2000000</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 생일이 8월8일인 사원들과 같은 부서코드, 직급코드를 가진 사원들의</span>\n<span class=\"token comment\">-- 사원명, 생일('0808'), 부서코드, 부서명 출력</span>\n\n<span class=\"token keyword\">SELECT</span> dept_code<span class=\"token punctuation\">,</span> job_code\n<span class=\"token keyword\">FROM</span> EMPLOYEE <span class=\"token keyword\">JOIN</span> job\n\t<span class=\"token keyword\">USING</span> <span class=\"token punctuation\">(</span>job_code<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">WHERE</span> emp_no <span class=\"token operator\">LIKE</span> <span class=\"token string\">'__0808%'</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"date":"April 04, 2022","title":"데이터베이스 4일차 정리 - DB서브쿼리","categories":"featured database","author":"bontaedev","emoji":"🪤"},"fields":{"slug":"/database/10-db-subquery/"}},"site":{"siteMetadata":{"siteUrl":"https://bontaedev.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/database/09-db-SetOps/","nextSlug":"/database/08-db-0302/","prevSlug":"/database/10-db-subquery/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}