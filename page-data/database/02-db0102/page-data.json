{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/database/02-db0102/",
    "result": {"data":{"cur":{"id":"4fa436da-d8e5-5c44-b2bf-2a735236aabc","html":"<blockquote>\n<h1 id=\"오라클-데이터베이스를-학습하고-정리한-포스트입니다\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%9D%BC%ED%81%B4-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EB%A5%BC-%ED%95%99%EC%8A%B5%ED%95%98%EA%B3%A0-%EC%A0%95%EB%A6%AC%ED%95%9C-%ED%8F%AC%EC%8A%A4%ED%8A%B8%EC%9E%85%EB%8B%88%EB%8B%A4\" aria-label=\"오라클 데이터베이스를 학습하고 정리한 포스트입니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오라클 데이터베이스를 학습하고 정리한 포스트입니다..</h1>\n</blockquote>\n<h2 id=\"오라클-함수\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%9D%BC%ED%81%B4-%ED%95%A8%EC%88%98\" aria-label=\"오라클 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오라클 함수</h2>\n<ul>\n<li>단일 행 함수 : 각 행마다 반복적으로 구성해서 입력받은 행의 갯수만큼 결과를 반환하는 함수\nex) length : 데이터의 길이값 반환</li>\n<li>그룹 함수 : 특정한 행들의 집합으로 그룹이 형성되어 그룹당 1개의 결과를 반환</li>\n</ul>\n<h2 id=\"단일-행-함수\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%9D%BC-%ED%96%89-%ED%95%A8%EC%88%98\" aria-label=\"단일 행 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단일 행 함수</h2>\n<h2 id=\"문자형-함수\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%9E%90%ED%98%95-%ED%95%A8%EC%88%98\" aria-label=\"문자형 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문자형 함수</h2>\n<ul>\n<li>lengthb() : 주어진 컬럼/문자열에 대한 길이(byte)로 반환해주는 함수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> emp_name<span class=\"token punctuation\">,</span> LENGTH<span class=\"token punctuation\">(</span>emp_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> LENGTHB<span class=\"token punctuation\">(</span>emp_name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>instr : 특정 문자열에서 찾고자 하는 문자열을 찾는 함수. 문자열의 위치를 찾아준다.</li>\n<li>instr(컬럼/문자열, 찾고자 하는 문자열, 시작인덱스,검색한 문자열의 순번)</li>\n<li>dual 테이블 : 오라클에서 제공해주는 연산, 함수 실행 용도로 사용하는 특수한 테이블</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> INSTR<span class=\"token punctuation\">(</span><span class=\"token string\">'hello world hi oracle'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token string\">\"FOUND\"</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> INSTR<span class=\"token punctuation\">(</span><span class=\"token string\">'hello world hi oracle'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token string\">\"FOUND\"</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> INSTR<span class=\"token punctuation\">(</span><span class=\"token string\">'hello wolrd hi hracle'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token string\">\"FOUND\"</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> INSTR<span class=\"token punctuation\">(</span><span class=\"token string\">'hello wolrd hi hracle'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token string\">\"FOUND\"</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>lpad(), rpad() : 주어진 컬럼/문자열을 대상으로 해서 임의의 문자열을 왼쪽 오른쪽에 덧붙여서 길이 N의 문자열을 반환하는 함수</li>\n<li>ltrim, rtrim(대상이 되는 컬럼/문자열, 제거하고 싶은 문자열) : 주어진 컬럼/문자열을 대상으로 제거하고 싶은 문자를 제거하고 반환하는 함수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> LPAD<span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token string\">'#'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span> LTRIM<span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">,</span><span class=\"token string\">'s'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> RTRIM<span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">,</span><span class=\"token string\">'@kh.or.kr'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>substr(대상이 되는 문자/문자열, 문자열을 잘라낼 위치, 반환할 문자의 개수)</li>\n<li>: 대상이 되는 컬럼/문자열에서 시작위치로부터 제시한 문자의 개수 만큼 문자열 잘라서 반환해주는 함수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> SUBSTR<span class=\"token punctuation\">(</span><span class=\"token string\">'HappyHappyDay'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> SUBSTR<span class=\"token punctuation\">(</span><span class=\"token string\">'HappyHappyDay'</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> SUBSTR<span class=\"token punctuation\">(</span><span class=\"token string\">'HappyHappyDay'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> SUBSTR<span class=\"token punctuation\">(</span><span class=\"token string\">'HappyHappyDay'</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>concat(대상문자열1, 대상문자열2) : 두 개의 문자열을 하나로 합친 후 반환해주는 함수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> CONCAT<span class=\"token punctuation\">(</span><span class=\"token string\">'abcd'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'가나다라'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>lower,upper,initcap(대상 문자열/컬럼)</li>\n<li>initcap : 단어의 첫 글자만 대문자로 변환해주는 함수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> LOWER<span class=\"token punctuation\">(</span><span class=\"token string\">'Welcome to My World'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> UPPER<span class=\"token punctuation\">(</span><span class=\"token string\">'Welcome to My World'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> INITCAP<span class=\"token punctuation\">(</span><span class=\"token string\">'welcome to my world'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>replace(대상 문자열/컬럼, 변경대상 문자열/컬럼, 변경할 문자)</li>\n<li>대상이 되는 문자열 컬럼을 기준으로 변경대상이 되는 문자를 찾아서 변경할 문자로 바꿔주는 함수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">REPLACE</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello Hi High'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Hi'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Ho'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">REPLACE</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello Hi High'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Hi'</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span></code></pre></div>","excerpt":"오라클 데이터베이스를 학습하고 정리한 포스트입니다.. 오라클 함수 단일 행 함수 : 각 행마다 반복적으로 구성해서 입력받은 행의 갯수만큼 결과를 반환하는 함수\nex) length : 데이터의 길이값 반환 그룹 함수 : 특정한 행들의 집합으로 그룹이 형성되어 그룹당 1개의 결과를 반환 단일 행 함수 문자형 함수 lengthb() : 주어진 컬럼/문자열에 대한 길이(byte)로 반환해주는 함수 instr : 특정 문자열에서 찾고자 하는 문자열을 찾는 함수. 문자열의 위치를 찾아준다. instr(컬럼/문자열, 찾고자 하는 문자열, 시작인덱스,검색한 문자열의 순번) dual 테이블 : 오라클에서 제공해주는 연산, 함수 실행 용도로 사용하는 특수한 테이블 lpad(), rpad() : 주어진 컬럼/문자열을 대상으로 해서 임의의 문자열을 왼쪽 오른쪽에 덧붙여서 길이 N의 문자열을 반환하는 함수 ltrim, rtrim(대상이 되는 컬럼/문자열, 제거하고 싶은 문자열) : 주어진 컬럼/문자열을 …","frontmatter":{"date":"March 29, 2022","title":"데이터베이스 1일차 정리 02 - 단일행 함수","categories":"database","author":"bontaedev","emoji":"🪤"},"fields":{"slug":"/database/02-db0102/"}},"next":{"id":"fae96840-466e-5a7b-86c0-b5ff95dd5230","html":"<blockquote>\n<h1 id=\"오라클-데이터베이스를-학습하고-정리한-포스트입니다\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%9D%BC%ED%81%B4-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EB%A5%BC-%ED%95%99%EC%8A%B5%ED%95%98%EA%B3%A0-%EC%A0%95%EB%A6%AC%ED%95%9C-%ED%8F%AC%EC%8A%A4%ED%8A%B8%EC%9E%85%EB%8B%88%EB%8B%A4\" aria-label=\"오라클 데이터베이스를 학습하고 정리한 포스트입니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오라클 데이터베이스를 학습하고 정리한 포스트입니다..</h1>\n</blockquote>\n<h1 id=\"실행환경-설정\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%ED%96%89%ED%99%98%EA%B2%BD-%EC%84%A4%EC%A0%95\" aria-label=\"실행환경 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실행환경 설정</h1>\n<ul>\n<li>oracle 데이터베이스 사용</li>\n<li>DBeaver 사용</li>\n</ul>\n<h1 id=\"데이터베이스란\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EB%9E%80\" aria-label=\"데이터베이스란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터베이스란?</h1>\n<ul>\n<li>\n<p>데이터 : 어떤 자료나 실제 값</p>\n</li>\n<li>\n<p>데이터베이스 : 데이터가 저장되는 공간. 연관된 데이터를 최대한 중복없이 구조적으로 저장해 놓은 곳</p>\n<ul>\n<li>실시간 접근성 : 사용자가 데이터를 요청하면 실시간으로 서비스</li>\n<li>계속적인 변화 : 최신 데이터를 유지</li>\n<li>동시 공유 : 서로 다른 업무를 하는 사용자들이 동시에 접속해서 데이터를 공유하는게 가능.</li>\n<li>내용에 따른 참조 : 데이터의 물리적 주소값이 아니라 데이터가 가지고 있는 값에 따라 참조된다.</li>\n</ul>\n</li>\n<li>\n<p>데이터베이스의 장점</p>\n<ul>\n<li>테이블 단위로 저장된다.</li>\n<li>테이블을 구성하는 데이터의 조건, 자료형 설정</li>\n<li>사용자가 규정한 형태의 데이터만 저장되어 관리될 수 있음</li>\n</ul>\n<h1 id=\"dbmsdatabase-management-system\" style=\"position:relative;\"><a href=\"#dbmsdatabase-management-system\" aria-label=\"dbmsdatabase management system permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DBMS(Database Management System)</h1>\n<p>데이터베이스에서 데이터를 추출, 조작, 정의, 제어등을 할 수 있게 해주는 데이터베이스 관리 시스템</p>\n</li>\n</ul>","frontmatter":{"date":"March 29, 2022","title":"데이터베이스 1일차 정리 01","categories":"database","author":"bontaedev","emoji":"🪤"},"fields":{"slug":"/database/01-db0101/"}},"prev":{"id":"f9bc6138-3f2a-5926-a95e-1e9850e47ab1","html":"<blockquote>\n<h1 id=\"오라클-데이터베이스를-학습하고-정리한-포스트입니다\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%9D%BC%ED%81%B4-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EB%A5%BC-%ED%95%99%EC%8A%B5%ED%95%98%EA%B3%A0-%EC%A0%95%EB%A6%AC%ED%95%9C-%ED%8F%AC%EC%8A%A4%ED%8A%B8%EC%9E%85%EB%8B%88%EB%8B%A4\" aria-label=\"오라클 데이터베이스를 학습하고 정리한 포스트입니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오라클 데이터베이스를 학습하고 정리한 포스트입니다..</h1>\n</blockquote>\n<h1 id=\"숫자형-함수\" style=\"position:relative;\"><a href=\"#%EC%88%AB%EC%9E%90%ED%98%95-%ED%95%A8%EC%88%98\" aria-label=\"숫자형 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>숫자형 함수</h1>\n<ul>\n<li>abs : 인자로 전달받은 숫자의 절댓값을 반환하는 함수</li>\n<li>mod : 인자로 전달받은 숫자를 나눌 값으로 나눠서 나머지를 반환하는 함수</li>\n<li>round : 인자로 받은 숫자를 반올림하여 반환해주는 함수</li>\n<li>floor(숫자) : 인자로 받은 숫자의 소숫점 자리를 모두 버리는 함수</li>\n<li>TRUNCATE(숫자, 소수점 위치) : 인자로 받은 숫자를 지정한 위치까지 잘라서 반환해주는 함수</li>\n<li>ceil(숫자) : 인자로 받은 소숫점 자리를 무조건 올리고 버리는 함수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> ABS<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token function\">MOD</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token function\">MOD</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token function\">ROUND</span><span class=\"token punctuation\">(</span><span class=\"token number\">123.456</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token function\">ROUND</span><span class=\"token punctuation\">(</span><span class=\"token number\">123.678</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">123.456</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">123.456</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token function\">ROUND</span><span class=\"token punctuation\">(</span><span class=\"token number\">123.456</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span> FLOOR<span class=\"token punctuation\">(</span><span class=\"token number\">123.456</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> FLOOR<span class=\"token punctuation\">(</span><span class=\"token number\">123.678</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span> TRUNC<span class=\"token punctuation\">(</span><span class=\"token number\">123.456</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ROUND</span><span class=\"token punctuation\">(</span><span class=\"token number\">123.456</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span> ceil<span class=\"token punctuation\">(</span><span class=\"token number\">123.456</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> FLOOR<span class=\"token punctuation\">(</span><span class=\"token number\">123.456</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span></code></pre></div>\n<h1 id=\"날짜형-함수\" style=\"position:relative;\"><a href=\"#%EB%82%A0%EC%A7%9C%ED%98%95-%ED%95%A8%EC%88%98\" aria-label=\"날짜형 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>날짜형 함수</h1>\n<ul>\n<li>sysdate : 시스템에 저장되어 있는 현재 날짜 반환</li>\n<li>current_date : session(접속) 한 곳의 timezone을 변환해주는 변수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> SYSDATE <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">CURRENT_DATE</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>month_between() : 두 날짜형 인자를 받아 사이의 개월 수를 반환</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> MONTHS_BETWEEN<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span>hire_date<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> FLOOR<span class=\"token punctuation\">(</span>MONTHS_BETWEEN<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span>hire_date<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"month\"</span> <span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> MONTHS_BETWEEN<span class=\"token punctuation\">(</span>SYSDATE<span class=\"token punctuation\">,</span>SYSDATE<span class=\"token operator\">-</span><span class=\"token number\">31</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> EMPLOYEE<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>add_months(기준 날짜, 더할 개월 수) : 첫 번째 인자값인 날짜를 기준으로 해서 두 번째 인자값을 더해서 반환해주는 함수. 마지막 날을 출력</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> ADD_MONTHS<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> ADD_MONTHS<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>next_day(기준날짜, 요일/숫자) : 기준 날짜를 기준으로 해서 오른쪽에 해당하는 가장 가까운 날짜를 반환해주는 함수</li>\n<li>숫자 : 1-일요일 7-토요일</li>\n<li>last_day(기준날짜) : 기준날짜를 바탕으로 해서 해당 날짜가 속한 달의 마지막 날을 반환</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> NEXT_DAY<span class=\"token punctuation\">(</span>SYSDATE<span class=\"token punctuation\">,</span><span class=\"token string\">'월요일'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> NEXT_DAY<span class=\"token punctuation\">(</span>SYSDATE<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span> LAST_DAY<span class=\"token punctuation\">(</span>SYSDATE<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> LAST_DAY<span class=\"token punctuation\">(</span>ADD_MONTHS<span class=\"token punctuation\">(</span>SYSDATE<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>extract(year/month/day fromn date(현재날짜)) : 기준날짜로부터 년월일을 반환</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> EXTRACT <span class=\"token punctuation\">(</span><span class=\"token keyword\">YEAR</span> <span class=\"token keyword\">FROM</span> sysdate<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"date":"March 30, 2022","title":"데이터베이스 2일차 정리 01 - 숫자형 함수","categories":"database","author":"bontaedev","emoji":"🪤"},"fields":{"slug":"/database/03-db0201/"}},"site":{"siteMetadata":{"siteUrl":"https://bontaedev.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/database/02-db0102/","nextSlug":"/database/01-db0101/","prevSlug":"/database/03-db0201/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}