{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/database",
    "result": {"pageContext":{"currentCategory":"database","categories":["All","Web","database","featured","JS","java","TIL","회고","알고리즘","블로그"],"edges":[{"node":{"id":"18682f71-6c55-5bcb-8b3a-40cff29df309","excerpt":"DBCP DB의 접속량에는 한계가 있다. 무한정으로 객체를 생성하면 서버에 과부하. Database Connection Pool : 한정된 Connection만 만들 수 있게 제한 DB Connection Pool(DBCP) : 커넥션 객체가 담길 수 있는 공간 Connection Pool을 이용해서 지정된 개수만큼 Connection 객체를 생성해놓고 선착순으로 접속한 클라이언트에 가지고 있는 Connection을 분배하고 그 뒤로 들어오는 클라이언트들은 앞의 클라이언트들이 Connection을 반납할 때까지 대기 여기서는 Apache Common DBCP를 사용 DBCP 라이브러리 다운로드, 적용 BasicDataSource 클래스 인스턴스 생성 : DBCP를 만들어주는 클래스 DBCP를 구성하기 위해 필요한 설정값 Singleton 패턴 적용 위의 BasicDataSource를 통해 커넥션 풀을 반환하는 과정을 싱글톤 패턴을 적용하여 여러개의 데이터 풀이 생성되는 것을 방지할…","fields":{"slug":"/database/19-jdbc-03/"},"frontmatter":{"categories":"database","title":"JDBC 3일차 - DBCP","date":"April 13, 2022"}},"next":{"fields":{"slug":"/database/18-jdbc-02/"}},"previous":{"fields":{"slug":"/webdev/01-webdev-html01/"}}},{"node":{"id":"9b27aeb4-43f4-53ae-a102-f265fc9f3595","excerpt":"SQL Injection 데이터를 삽입할 때 값이 아니라 쿼리문을 삽입해서 예상치 않는 결과를 발생시킴 개인 정보 유출에 악용됨. 이것 때문에 Statement 말고 PreparedStatement사용 PreparedStatement PreparedStatement : 객체를 생성할 때 인자값으로 넘겨주는 SQL문을 미리 DBMS에 컴파일하여 올려 둠. 물음표를 사용해 추후에 인자값을 세팅해줄 자리를 표시한다. 추후에 ?자리에 세팅되는 값은 말그대로 값 그 자체로 들어가게 된다. (문자열로 인식) ‘1 = 1’ 이러한 식을 넣어도 값으로만 인식하기 때문에 SQL Inject에 대한 방지처리가 됨. Staetement 객체보다 PreparedStatement 객체를 활용했을 때 가독성도 높아짐. Oracle Date(sql.date) - Java Date의 차이 SimpleDateFormat : oracle date 타입의 데이터를 Java의 String으로 변환 생성자의 인자값을 …","fields":{"slug":"/database/18-jdbc-02/"},"frontmatter":{"categories":"database","title":"JDBC 2일차 - PreparedStatement","date":"April 12, 2022"}},"next":{"fields":{"slug":"/database/17-jdbc-01/"}},"previous":{"fields":{"slug":"/database/19-jdbc-03/"}}},{"node":{"id":"bae6fe8f-6518-5c89-8cf7-9bf685ae0899","excerpt":"JDBC  : 자바에서 데이터베이스와 연결해 데이터를 주고받을 수 있게 해주는 라이브러리 sql 명령문을 자바에서 수행하면 DB로 전달 DBMS의 종류에 따라서 JDBC의 종류도 달라진다. 여기서는 Oracle (OJDBC) 를 사용 JDBC 드라이버 다운로드와 세팅 JDBC로 자바프로그램과 DB 연동하기 기본적인 DB연결 셋팅 Connnection 객체 생성 DriverManager 클래스의 getConnection()을 통해 객체 생성 getConnection(url, username, password) 기본적인 CRUD 기능 구현해보기  객체 : 오라클에게 sql문을 전송해 쿼리의 결과를 요청할 수 있게 해주는 객체  : 행에 변화를 줄 때 사용하는 메서드. 쿼리문의 INSERT, UPDATE, DELETE와 사용 메서드의 반환값으로 나오는 정수는 인자값으로 넘겨준 쿼리문을 통해서 영향을 받은 행의 개수 INSERT 기능 (데이터 삽입) UPDATE 기능 (데이터 수정) DE…","fields":{"slug":"/database/17-jdbc-01/"},"frontmatter":{"categories":"database","title":"JDBC 1일차 - JDBC 개요","date":"April 11, 2022"}},"next":{"fields":{"slug":"/database/16-db-viewsequence/"}},"previous":{"fields":{"slug":"/database/18-jdbc-02/"}}},{"node":{"id":"a7d522b0-805f-553e-973f-cf90b6da4e0c","excerpt":"뷰 View 하나 이상의 테이블에서 원하는 데이터를 선택해서 새로운 가상테이블을 만들어 주는 것 뷰를 통해 만들어진 테이블이 물리적으로 존재하는 것은 아니고, 다른 테이블의 데이터만 조합해서 보여주는 것. 특정 계정이 원본 데이블에 접근해서 모든 데이터(불필요한 데이터)에 접근하는 걸 방지할 수 있음 뷰를 생성하는 권한 - 뷰의 내용을 수정하면 - 실제 원본 테이블의 데이터도 수정됨 원본 테이블의 내용이 수정되면 뷰의 내용도 수정된다. - 데이터 실시간 공유 (업데이트) 시퀀스(Sequence) 순차적으로 정수값을 자동을 생성하는 객체 (자동 번호 발생기) 옵션 start with 숫자 : 몇번부터 번호를 시작할건지 increment by 숫자 : 몇 단위로 숫자를 증가시킬건지 maxvalue 숫자 / nomaxvalue : 시퀀스의 최대값 지정 minvalue 숫자 / nominvalue : 시퀀스의 최소값 지정 / 지정x cycle / nocycle : 최대값에 도달하면 처음으…","fields":{"slug":"/database/16-db-viewsequence/"},"frontmatter":{"categories":"database","title":"데이터베이스 6일차 정리 - 뷰(View), 시퀀스(Sequence)","date":"April 07, 2022"}},"next":{"fields":{"slug":"/database/15-db-transaction/"}},"previous":{"fields":{"slug":"/database/17-jdbc-01/"}}},{"node":{"id":"78048755-17a2-5e30-921b-c1295096a3ec","excerpt":"트랜잭션이란? Transaction 한번에 수행되어야하는 작업 단위 하나의 작업을 완료하기 위해서 각각의 흐름의 정상적으로 완료됐을때만 작업단위를 정상적으로 수행되었다고 판단하고 완료하는 과정 트랜잭션 예시 ex) ATM 카드삽입 메뉴 선택(인출) 금액확인 / 비밀번호 인증 사용자가 입력한 금액이 뽑을 수 있는 금액인지 확인 실제 현금 나옴 카드 뽑고 끝","fields":{"slug":"/database/15-db-transaction/"},"frontmatter":{"categories":"database","title":"데이터베이스 6일차 정리 - DB 트랜잭션","date":"April 06, 2022"}},"next":{"fields":{"slug":"/database/14-db-dml/"}},"previous":{"fields":{"slug":"/database/16-db-viewsequence/"}}},{"node":{"id":"5ec05f77-61f4-56d5-841d-2f7b29775630","excerpt":"데이터 조작어 DML(Data Manipulation Language) Data를 삽입 수정 삭제 조회하는 언어 (CRUD) 1. INSERT 테이블에 새로은 행을 추가할 때 사용하는 구문 서브쿼리를 이용한 INSERT 구문 사용 자동형변환(묵시적형변환) : 오라클이 자동으로 자료형을 추측하여 변환해주는 것 2. UPDATE 컬럼에 저장된 데이터를 수정하는 구문. 테이블 전체 행 개수에 변화를 주지 않음 3. DELETE 테이블의 행을 삭제하는 구문. 행의 개수에 변화가 생김\n조건문을 걸어주지 않으면 테이블의 모든 데이터가 삭제됨 TRUNCATE : 테이블의 전체 행을 삭제할 때 사용하는 구문. 되돌릴 수 없음, 영구적으로 삭제","fields":{"slug":"/database/14-db-dml/"},"frontmatter":{"categories":"database","title":"데이터베이스 6일차 정리 - 데이터조작어(DML)","date":"April 06, 2022"}},"next":{"fields":{"slug":"/database/13-db-dcl/"}},"previous":{"fields":{"slug":"/database/15-db-transaction/"}}},{"node":{"id":"0db1a697-4fc1-567e-932f-a662998062f8","excerpt":"GRANT / REVOKE 사용자 또는 role(resource, connect, dba)에 대한 권한 부여 system / 관리자 계정 접속 - 신규 사용자 생성 - grant 접속 권한 부여 - 리소스 권한 부여","fields":{"slug":"/database/13-db-dcl/"},"frontmatter":{"categories":"database","title":"데이터베이스 6일차 정리 - 데이터제어어(DCL)","date":"April 06, 2022"}},"next":{"fields":{"slug":"/database/12-db-topNQuery/"}},"previous":{"fields":{"slug":"/database/14-db-dml/"}}},{"node":{"id":"f2010d2d-5f05-5255-b289-c3fe42f3a257","excerpt":"Top N 분석 (Top N Query) 컬럼에서 가장 큰 n개의 값을 혹은 가장 작은 n개의 값을 요청할 때 사용 상위/하위 n개의 데이터 회사에서 가장 많이 팔린 제품 10개, 회사에서 봉급이 제일 많은 10개 게시판 페이징 / 조회수가 높은 인기글 ROWNUM 출력되는 Select 문의 행마다 자동적으로 순위를 매겨주는 것 default로 원래 존재하는 데이터의 순서대로 순위를 매겨준다. 우리가 원하는 기준에 맞춰 이미 정렬이 된 상태의 데이터에 대해 rownum -> 순서를 매겨야 함 인라인 뷰(Inline View) : 서브쿼리 안에서 월급이 제일 큰 순서대로 일단 데이터를 정렬 실제 메인쿼리에서 rownum을 사용하게 되면 이미 정렬된 데이터에 대해 순서가 매겨지게 된다. 인라인뷰를 계속 사용하면 쿼리문이 길어진다. 1.ROW_NUMBER() over 안쪽의 컬럼 순서에 따라 정렬한 다음 순위를 매긴다. 정렬 데이터에 중복값이 있다면 원래 순서대로 19,20 이런 식으로…","fields":{"slug":"/database/12-db-topNQuery/"},"frontmatter":{"categories":"database","title":"데이터베이스 5일차 정리 - DB_TopN_분석(topNQuery)","date":"April 05, 2022"}},"next":{"fields":{"slug":"/database/11-db-constraints/"}},"previous":{"fields":{"slug":"/database/13-db-dcl/"}}},{"node":{"id":"ec3aaa98-827e-58f2-870e-109051d85043","excerpt":"DDL(Data Definition Language) 데이터 정의어 drop : 테이블을 삭제하기 위해 사용하는 구문 DROP TABLE temp; ALTER 테이블에 정의된 내용을 수정하고자 할 때 사용하는 데이터 정의어 컬럼 추가삭제, 제약조건 추가삭제, 컬럼의 자료형 변경, DEFAULT 값 변경 테이블명,컬럼명,제약조건의 이름 변경 제약조건(Constraints) 테이블을 생성할 때 구성하는 컬럼에 들어갈 데이터에 대해 제약조건을 설정하는 것 데이터의 일관성과 정확성을 유지하기 위해서 (데이터 무결성)\n  : 해당 컬럼에 null 값이 들어갈 수 없음.  : 중복된 값을 허용하지 않음  : (NOT NULL + Unique) 고유한 식별자로 사용하는 컬럼 : 두 테이블 간의 관계를 설정하고, b테이블의 member_id 컬럼에 들어갈 수 있는 값이 A테이블의 ID에 있는 데이터여야 하는 경우 예시 /게시글/댓글 의 관계  : 해당컬럼에 저장 가능한 값의 범위 조건을 지정해서…","fields":{"slug":"/database/11-db-constraints/"},"frontmatter":{"categories":"database","title":"데이터베이스 5일차 정리 - DB_DDL(데이터정의어), 제약조건(Constraints)","date":"April 05, 2022"}},"next":{"fields":{"slug":"/database/10-db-subquery/"}},"previous":{"fields":{"slug":"/database/12-db-topNQuery/"}}},{"node":{"id":"0f597266-2d8d-5292-833b-23c3c4d35b48","excerpt":"서브쿼리 (Sub Query) 하나의 SQL문 안에 포함된 다른 SQL문 메인쿼리가 서브쿼리를 포함하는 종속적 관계 서브쿼리는 소괄호로 묶어줌 / 연산자의 오른쪽에 위치 / order by는 subquey안에서 사용불가 서브쿼리 종류 단일행, 다중행, 다중열, 다중행다중열, 상호연관, 스킬라 1. 단일행 서브쿼리 : 서브쿼리 조회결과 값이 1개 행 2. 다중행 서브쿼리 : 조회 결과가 여러개(여러행) 다중행 서브쿼리 앞에는 != 연산자 못씀 IN, NOT IN, ANY, ALL, EXISTS 등과 같이 쓰임 3. 다중열 서브쿼리 : 서브쿼리 조회결과 값이 여러개 열 일때","fields":{"slug":"/database/10-db-subquery/"},"frontmatter":{"categories":"featured database","title":"데이터베이스 4일차 정리 - DB서브쿼리","date":"April 04, 2022"}},"next":{"fields":{"slug":"/database/09-db-SetOps/"}},"previous":{"fields":{"slug":"/database/11-db-constraints/"}}},{"node":{"id":"f54cf4c9-3391-5b9e-bd15-726fa4619ccb","excerpt":"집합 연산자 Set Operator 두 개 이상의 테이블을 조인없이 연관된 데이터를 조회하는 방식 여러 개의 질의결과(ResultSet)을 연결해서 하나로 결합하는 방식 각 테이블에서 반환된 결과값을 하나의 테이블로 결합하는 방식 여러개의 sql문을 사용해서 하나의 테이블로 결과를 반환받아야 하는 경우 UNION 합집합. 중복된 데이터를 제거하고 첫번째 컬럼을 기준으로 오름차순하여 데이터를 보여줌. 각 테이블에서 조회하는 컬럼 수가 다르면 UNION 사용X 조회하려는 컬럼이 서로 상호호환 불가한 데이터타입이면 union 사용 X (데이터의 일관성 유지) UNION ALL 합집합. 중복된 데이터를 제거하고 정렬없이 데이터를 보여줌. 조회한 결과값의 첫번째 테이블 아래로 두번째 테이블 결과값을 이어붙임 INTERSECT 교집합. 두 테이블의 쿼리 결과중 공통된 결과값만 보여줌. MINUS 차집합. 두 테이블의 쿼리 결과중 공통된 요소를 뺀 하나의 테이블만 보여줌 예시문제 employe…","fields":{"slug":"/database/09-db-SetOps/"},"frontmatter":{"categories":"database","title":"데이터베이스 4일차 정리 - 집합연산자","date":"April 04, 2022"}},"next":{"fields":{"slug":"/database/08-db-0302/"}},"previous":{"fields":{"slug":"/database/10-db-subquery/"}}},{"node":{"id":"a771cb83-3e87-5a25-be95-7722058cc34a","excerpt":"JOIN 여러 개의 테이블을 결합. 조합하려고 하는 테이블에서 각 테이블의 공통된 컬럼을 데이터로 합쳐서 표현하는 것. 조건을 제시하지 않으면 이중 for문과 비슷한 형태로 동작. (모든 경우의 수를 조회) ANSI 표준 JOIN, Oracle JOIN 예시 : 부서코드가 같은 employee, Department 테이블의 사번, 사원명, 부서코드, 부서명 조회 oracle syntax ANSI syntax 예시 : 사번, 사원명, 직급코드 직급명 출력 두개의 테이블에서 컬럼명이 같을 때 각 테이블에 별칭을 붙임, 이름이 같은 컬럼명 앞에 테이블별칭.컬럼명 형식으로 두 테이블의 같의 컬럼명을 using을 사용 JOIN 종류 CROSS JOIN 조건이 없어 모든 경우의 수가 조합되어 나오는 경우 (A X B) INNER JOIN 테이블 A와 테이블 B에 조건이 맞는 데이터만 반환 (교집합), 가장 많이 사용  예시1 : 총무부, 회계관리부인 사원들의 사원명, 이메일, 부서명, 부서코…","fields":{"slug":"/database/08-db-0302/"},"frontmatter":{"categories":"database","title":"데이터베이스 3일차 정리 - DB_JOIN구문","date":"March 31, 2022"}},"next":{"fields":{"slug":"/database/06-db0301/"}},"previous":{"fields":{"slug":"/database/09-db-SetOps/"}}},{"node":{"id":"4753c4a8-a902-5dac-849b-e17aa953483d","excerpt":"그룹함수(Group Function) sum, avg, count, max/min SUM : 해당 컬럼/숫자 값의 총합을 구해주는 함수 AVG : 해당 컬럼 값들의 평균을 구해주는 함수 MAX/MIN : 해당 그룹에서 최대/최소값을 반환하는 함수 GROUP BY 그룹함수를 이용해 여러개의 결과값을 도출하고 싶을때 (그룹별 집계) 그룹함수는 단 한개의 결과값만을 도출. 그룹함수를 이용해 여러 개의 결과값을 도출하고 싶을 때? 그룹함수가 적용된 그룹을 기준으로 해서 group by절에 해당 컬럼을 사용 HAVING where 절에서는 그룹함수를 사용할 수 없다. HAVING : group by를 이용해 그룹함수로 값을 구해올 때 그 값에 대해 조건을 걸고 싶을 때 select … 그룹함수 FROM 테이블명 group by 컬럼… having 조건 from where group by having order by 예제 문제. 그룹함수 부서코드가 D5인 사람들의 급여의 총합 직원명, 직원들…","fields":{"slug":"/database/06-db0301/"},"frontmatter":{"categories":"database","title":"데이터베이스 3일차 정리 - 그룹함수","date":"March 31, 2022"}},"next":{"fields":{"slug":"/database/06-db0205/"}},"previous":{"fields":{"slug":"/database/08-db-0302/"}}},{"node":{"id":"fc6ddbde-5c52-56e4-a265-4b0289fc7a57","excerpt":"조건식(DECODE) decode(대상표현식, 조건1,결과1, 조건2, 결과2, default) default 값을 명시해주지 않으면 default = null 대상표현식/값이 조건1과 같다면 결과1을 반환, 정해준 조건이 안되면 default로 빠짐) 조건식 (CASE) case를 이용해 결과값을 적어줄 때 모든 조건에 대해 동일한 자료형 예제 문제 사번, 직원명과 퇴사여부를 출력. 퇴사여부를 보여주는 ENT_YN이 ‘Y’와 같다면 퇴사일을 출력 만약 퇴사하지 않았다면 재직중을 출력. 정렬순서는 퇴사여부, 사번 컬럼 오름차순. 부서별 1분기 실적 조회해보기 D2,D6 부서는 상 D9 부서는 하 나머지는 중 / 인턴은 해당없음 부서코드 없으면 인턴. 부서코드 중복 X. 정렬 순서는 부서코드 오름차순 ‘부서코드’ ‘1분기실적’ 이렇게 출력 조건식(DECODE) 조건식 (CASE) 예제 문제","fields":{"slug":"/database/06-db0205/"},"frontmatter":{"categories":"database","title":"데이터베이스 2일차 정리 04 - 오라클 조건식","date":"March 30, 2022"}},"next":{"fields":{"slug":"/database/05-db0203/"}},"previous":{"fields":{"slug":"/database/06-db0301/"}}},{"node":{"id":"7d531931-7f9d-5959-85ce-20a2ed3c4bfb","excerpt":"DB의 형변환이란? 데이터 타입을 바꿔주는 작업 to_char(date/number, format) 날짜 혹은 숫자를 특정한 형식의 문자형으로 반환해주는 함수 예시 : 입사년월일 0000년00월00일 - 사원명, 입사년월일 한글을 형식에 넣고 싶다면 더블 따옴표 안에 넣어줌 예시 : employee 테이블 사원명, 입사일 -> 1990/02/05 (화) 형태로 조회  to_char(대상 숫자,포맷) 포맷 000 : 지정해준 형식보다 짧은 숫자가 들어오면 형식에 맞춰 결과를 반환 999 : 지정해준 형식보다 짧은 숫자가 들어오면 길이에 맞춰서 반환  to_char(숫자,‘L…‘) - 통화표시 예시 : employee 직원명, 직급코드, 연봉 조회 단 연봉은 579,656,555, 연봉 보너스가 적용된 금액으로 조회 ((월급*bonus)*12)  to_date(숫자/문자, 형식) 숫자형 또는 문자형 데이터를 Date 타입으로 바꿔줌 시간값을 변환할 때 앞에 년월일 정보를 주지 않으며 …","fields":{"slug":"/database/05-db0203/"},"frontmatter":{"categories":"database","title":"데이터베이스 2일차 정리 03 - DB형변환","date":"March 30, 2022"}},"next":{"fields":{"slug":"/database/04-db0202/"}},"previous":{"fields":{"slug":"/database/06-db0205/"}}},{"node":{"id":"2edc4b70-7f3e-5109-9205-c6c5c9060d8d","excerpt":"오라클 데이터베이스를 학습하고 정리한 포스트입니다.. 숫자형 함수 abs : 인자로 전달받은 숫자의 절댓값을 반환하는 함수 mod : 인자로 전달받은 숫자를 나눌 값으로 나눠서 나머지를 반환하는 함수 round : 인자로 받은 숫자를 반올림하여 반환해주는 함수 floor(숫자) : 인자로 받은 숫자의 소숫점 자리를 모두 버리는 함수 TRUNCATE(숫자, 소수점 위치) : 인자로 받은 숫자를 지정한 위치까지 잘라서 반환해주는 함수 ceil(숫자) : 인자로 받은 소숫점 자리를 무조건 올리고 버리는 함수 날짜형 함수 sysdate : 시스템에 저장되어 있는 현재 날짜 반환 current_date : session(접속) 한 곳의 timezone을 변환해주는 변수 month_between() : 두 날짜형 인자를 받아 사이의 개월 수를 반환 add_months(기준 날짜, 더할 개월 수) : 첫 번째 인자값인 날짜를 기준으로 해서 두 번째 인자값을 더해서 반환해주는 함수. 마지막 날을…","fields":{"slug":"/database/04-db0202/"},"frontmatter":{"categories":"database","title":"데이터베이스 2일차 정리 02 - 날짜형 함수","date":"March 30, 2022"}},"next":{"fields":{"slug":"/database/03-db0201/"}},"previous":{"fields":{"slug":"/database/05-db0203/"}}},{"node":{"id":"f9bc6138-3f2a-5926-a95e-1e9850e47ab1","excerpt":"오라클 데이터베이스를 학습하고 정리한 포스트입니다.. 숫자형 함수 abs : 인자로 전달받은 숫자의 절댓값을 반환하는 함수 mod : 인자로 전달받은 숫자를 나눌 값으로 나눠서 나머지를 반환하는 함수 round : 인자로 받은 숫자를 반올림하여 반환해주는 함수 floor(숫자) : 인자로 받은 숫자의 소숫점 자리를 모두 버리는 함수 TRUNCATE(숫자, 소수점 위치) : 인자로 받은 숫자를 지정한 위치까지 잘라서 반환해주는 함수 ceil(숫자) : 인자로 받은 소숫점 자리를 무조건 올리고 버리는 함수 날짜형 함수 sysdate : 시스템에 저장되어 있는 현재 날짜 반환 current_date : session(접속) 한 곳의 timezone을 변환해주는 변수 month_between() : 두 날짜형 인자를 받아 사이의 개월 수를 반환 add_months(기준 날짜, 더할 개월 수) : 첫 번째 인자값인 날짜를 기준으로 해서 두 번째 인자값을 더해서 반환해주는 함수. 마지막 날을…","fields":{"slug":"/database/03-db0201/"},"frontmatter":{"categories":"database","title":"데이터베이스 2일차 정리 01 - 숫자형 함수","date":"March 30, 2022"}},"next":{"fields":{"slug":"/database/02-db0102/"}},"previous":{"fields":{"slug":"/database/04-db0202/"}}},{"node":{"id":"4fa436da-d8e5-5c44-b2bf-2a735236aabc","excerpt":"오라클 데이터베이스를 학습하고 정리한 포스트입니다.. 오라클 함수 단일 행 함수 : 각 행마다 반복적으로 구성해서 입력받은 행의 갯수만큼 결과를 반환하는 함수\nex) length : 데이터의 길이값 반환 그룹 함수 : 특정한 행들의 집합으로 그룹이 형성되어 그룹당 1개의 결과를 반환 단일 행 함수 문자형 함수 lengthb() : 주어진 컬럼/문자열에 대한 길이(byte)로 반환해주는 함수 instr : 특정 문자열에서 찾고자 하는 문자열을 찾는 함수. 문자열의 위치를 찾아준다. instr(컬럼/문자열, 찾고자 하는 문자열, 시작인덱스,검색한 문자열의 순번) dual 테이블 : 오라클에서 제공해주는 연산, 함수 실행 용도로 사용하는 특수한 테이블 lpad(), rpad() : 주어진 컬럼/문자열을 대상으로 해서 임의의 문자열을 왼쪽 오른쪽에 덧붙여서 길이 N의 문자열을 반환하는 함수 ltrim, rtrim(대상이 되는 컬럼/문자열, 제거하고 싶은 문자열) : 주어진 컬럼/문자열을 …","fields":{"slug":"/database/02-db0102/"},"frontmatter":{"categories":"database","title":"데이터베이스 1일차 정리 02 - 단일행 함수","date":"March 29, 2022"}},"next":{"fields":{"slug":"/database/01-db0101/"}},"previous":{"fields":{"slug":"/database/03-db0201/"}}},{"node":{"id":"fae96840-466e-5a7b-86c0-b5ff95dd5230","excerpt":"오라클 데이터베이스를 학습하고 정리한 포스트입니다.. 실행환경 설정 oracle 데이터베이스 사용 DBeaver 사용 데이터베이스란? 데이터 : 어떤 자료나 실제 값 데이터베이스 : 데이터가 저장되는 공간. 연관된 데이터를 최대한 중복없이 구조적으로 저장해 놓은 곳 실시간 접근성 : 사용자가 데이터를 요청하면 실시간으로 서비스 계속적인 변화 : 최신 데이터를 유지 동시 공유 : 서로 다른 업무를 하는 사용자들이 동시에 접속해서 데이터를 공유하는게 가능. 내용에 따른 참조 : 데이터의 물리적 주소값이 아니라 데이터가 가지고 있는 값에 따라 참조된다. 데이터베이스의 장점 테이블 단위로 저장된다. 테이블을 구성하는 데이터의 조건, 자료형 설정 사용자가 규정한 형태의 데이터만 저장되어 관리될 수 있음 DBMS(Database Management System) 데이터베이스에서 데이터를 추출, 조작, 정의, 제어등을 할 수 있게 해주는 데이터베이스 관리 시스템","fields":{"slug":"/database/01-db0101/"},"frontmatter":{"categories":"database","title":"데이터베이스 1일차 정리 01","date":"March 29, 2022"}},"next":{"fields":{"slug":"/JS/010-js-0224/"}},"previous":{"fields":{"slug":"/database/02-db0102/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}