{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/Web",
    "result": {"pageContext":{"currentCategory":"Web","categories":["All","Web","database","featured","JS","java","TIL","회고","알고리즘","블로그"],"edges":[{"node":{"id":"78f34344-3814-5597-ad96-899e7773a9ff","excerpt":"API","fields":{"slug":"/webdev/08-api/"},"frontmatter":{"categories":"Web","title":"API 사용법","date":"April 29, 2022"}},"next":{"fields":{"slug":"/webdev/04-css03/"}},"previous":null},{"node":{"id":"905c1cd4-0131-5d36-9c87-59ebbcddaccf","excerpt":"1. 기본 틀 짜기 우선 전체적인 틀을 먼저 구성한다.\n헤더부분에는 홈페이지 로고, 타이틀, Reserved 영역, 그리고 Body영역,Footer 영역으로 크게 3부분으로 나눈다 이렇게 전체 영역을 wrapper라는 클래스로 지정해 감싸고 div를 통해 header, body, footer를 나눈다. 여기서는 레이아웃을 구성할 때 div 태그를 사용한다. div 태그는 안에 컨텐츠가 없으면 크기가 알아서 작아지는 특징이 있다. 그리고 body부분을 Conetens, loginBox, emailBox라는 3가지 요소로 나눈다. header를 div로 세분화해서 header-contents 클래스로 만듬. body의 contents와 user부분도 body-contents 클래스를 붙임. 2. 로그인 박스 만들기 HTML 구조 전체 틀을 loginBox로 구성하고 제목(titleBox), 아이디/비밀번호 input공간(inputBox), 버튼(btnBox), 비밀번호찾기 링크(lin…","fields":{"slug":"/webdev/04-css03/"},"frontmatter":{"categories":"Web","title":"CSS_레이아웃 배치 연습","date":"April 18, 2022"}},"next":{"fields":{"slug":"/webdev/04-css04/"}},"previous":{"fields":{"slug":"/webdev/08-api/"}}},{"node":{"id":"ae6fe1d1-b4e4-5a06-b144-0a7c81d3d2b6","excerpt":"드림코딩 유튜브를 보고 유용한 부분을 정리.. 이전에 레이아웃을 짜는 방법 position, float, table 복잡하고 시간이 많이 소요됨 아이템들의 정렬과 배치, 동일한 크기로 조절하거나 위치를 조정하는데 제약사항이 많았음 float 이미지와 텍스트를 배치할 때 사용하는 용도 Flexbox Container와 item의 개념과 사용하는 주요한 속성값 container display flex-direction, flex-wrap, flex-flow, - justify-content, align-items, align-content item order, flex-grow, flex-shrink, flex, align-self main axis, cross axis 중심축을 기준으로 위치를 배치한다. 100% vs 100vh 퍼센트는 부모요소를 기준으로 한다 vh는 viewport. 즉 브라우저로 보이는 화면을 퍼센트로 기준으로 한다. color tool : 사이트를 디자인할 때…","fields":{"slug":"/webdev/04-css04/"},"frontmatter":{"categories":"Web","title":"CSS_Flexbox","date":"April 18, 2022"}},"next":{"fields":{"slug":"/webdev/07-bootstrap/"}},"previous":{"fields":{"slug":"/webdev/04-css03/"}}},{"node":{"id":"7b0bba4d-61d9-5a30-96cc-d0f9cc94eb2b","excerpt":"bootstrap ordering : breakpoint에 따라서 레이아웃 배치를 바꿔줄 때\n요소들에 order를 주고 그 순서에 맞게 배치하는 것이 가능 만약 화면의 크기가 바뀌었을 때\n보여주고 싶지 않은 요소 & 보여주고 싶은 요소를 결정하고 싶다면\nd 속성값을 사용한다. (display) d-none : col을 안보이게 하고 싶을 때\nd-md-block : md사이즈 이상일 때 태그에 block 속성을 가지게 한다. /_\n상대적 단위\nem : 본인 요소의 폰트 사이즈를 1em 가짐, 본인 요소가 글꼴 크기가 없으면\n부모요소를 기준으로 사이즈를 잡음\nrem : 루트요소(HTML)의 폰트사이즈를 기준으로 계산한 것이 1rem 계산\n_/","fields":{"slug":"/webdev/07-bootstrap/"},"frontmatter":{"categories":"Web","title":"CSS_Flexbox","date":"April 18, 2022"}},"next":{"fields":{"slug":"/webdev/03-css02/"}},"previous":{"fields":{"slug":"/webdev/04-css04/"}}},{"node":{"id":"d2a4bf4b-b324-505b-9619-9d8f640631b7","excerpt":"CSS 선택자 (CSS Selector) 1. 기본 선택자 전체 선택자  : 모든 html요소를 선택한다. 태그 선택자  : 특정 태그를 선택 id 선택자  : 태그에 고유한 id값을 부여해서 선택 class 선택자  : 태그에 고유한 class값을 부여해서 선택 id랑 클래스는 쓰이는 용도가 다른데 하나의 요소에 고유한 값으로 지정해주고 싶으면 id 여러개의 요소를 그룹으로서 관리하고 싶으면 class를 지정해서 선택한다. 2. 기본 속성 선택자 태그 선택자와 함께 사용하며,  속성 표시 3. 문자열 속성 선택자 속성값에서 특정한 값이 아니라 조건에 만족하는 값을 탐색해서 선택  : 속성값이 특정한 값을 문자열로 포함하는 경우 선택 (띄어쓰기 기준)  : 속성값이 특정한 값을 문자열로 포함하는 경우 선택 (- 기준)  : 속성값이 특정한 값으로 시작하는 태그를 선택하는 경우  : 속성값이 특정한 값으로 끝나는 태그를 선택  : 속성값이 특정한 값을 포함하는 태그를 선택  부정 선…","fields":{"slug":"/webdev/03-css02/"},"frontmatter":{"categories":"Web","title":"CSS 정리 02 - CSS 선택자","date":"April 17, 2022"}},"next":{"fields":{"slug":"/webdev/02-css01/"}},"previous":{"fields":{"slug":"/webdev/07-bootstrap/"}}},{"node":{"id":"4d88afd5-7b8e-54e0-b56b-cbc79d07315c","excerpt":"CSS(Cascading Style Sheet) 웹페이지를 이루는 html 요소들의 스타일을 꾸며줄 수 있는 기능 html 요소들이 사용자들에게 어떤 식으로 보일지를 결정해주는 기능 CSS 설정 방식 inline : html 요소의 태그 자체에 style 속성을 부여하는 방식 내부 스타일 시트 : 하나의 html 파일 안에서 style 태그를 통해 속성을 부여하는 방식 external : 외부의 독자적인 css style 시트를 생성해 스타일 속성값을 모아두고,\n그 파일을 import하여 사용 CSS 적용 우선순위 (중요도 / 명시도 / 선언순서) 중요도 속성값 뒤에다다 !important inline 방식으로 적용된 style (권장되지는 않음) #id 선택자 class, 가상 클래스 선택자 tag 요소 선택자(p, div, span) 명시도 : 해당 요소를 명확하게 표현하면 할수록 우선순위가 높아진다. 선언순서 : 하나의 요소에 대해서 여러 개의 스타일 속성을 부여 했을 때 가…","fields":{"slug":"/webdev/02-css01/"},"frontmatter":{"categories":"Web","title":"CSS 정리 01 - CSS에 대해서","date":"April 17, 2022"}},"next":{"fields":{"slug":"/webdev/01-webdev-html01/"}},"previous":{"fields":{"slug":"/webdev/03-css02/"}}},{"node":{"id":"64f6e513-932a-5f62-bf5d-2756cb2b6e51","excerpt":"국비과정 교육 중에서 HTML 파트를 공부하고 정리한 내용 웹페이지, 웹서비스 웹페이지 : 하나의 페이지. 웹페이지가 여러가지가 모여서 만들어지는 모음을 웹사이트라고 한다. HTML이란? HTML (Hyper Text Markup Language) : 웹페이지를 구성하는 언어 Markup Language : 구조화된 언어 - 각각의 요소들을 태그로 구조화시킨 언어 A라는 태그를 보면 이런 의미를 가지고 있구나고 해석할 수 있다. HTTP HTTP (HyperText Transfer\nProtocol) : 웹에서 이뤄지는 모든 데이터교환(클라이언트-서버)은 통신규약을 통해 이루어짐. HTML 태그  : 하이퍼링크 요소 구성 target 속성으로 새로운 탭으로 이동할지, 새로운 브라우저를 열어 이동할지, 현재 창에서 이동할 지 속성 부여 가능 self, blanl blank : 새로운 탭에서 열기  : 사용자의 입력값을 받기위해 사용하는 요소 placeholder : 어떤 값을 입력할 …","fields":{"slug":"/webdev/01-webdev-html01/"},"frontmatter":{"categories":"Web","title":"HTML_태그 정리","date":"April 15, 2022"}},"next":{"fields":{"slug":"/database/19-jdbc-03/"}},"previous":{"fields":{"slug":"/webdev/02-css01/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}